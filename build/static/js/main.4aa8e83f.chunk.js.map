{"version":3,"sources":["audio/Tab 2.m4a","audio/Tab 1.m4a","audio/Button 7.m4a","components/Station/Station.js","redux/actions/stations.js","components/Stations/Stations.js","components/Aircomp/Aircomp.js","components/Compass/Compass.js","components/UI/Button/Button.js","redux/filters/getStationByID.js","redux/actions/notifications.js","ui/Notifications/Notifications.js","components/UI/Legend/Legend.js","ui/Updatebar/Updatebar.js","container/App/App.js","redux/localStorage.js","redux/reducers/stationsReducer.js","redux/actions/api.js","redux/actions/ui.js","redux/middleware/stations.js","redux/actions/update.js","utilities/getErrorMessage.js","utilities/GetDateFromTo.js","redux/middleware/api.js","utilities/getUpperAustriaURL.js","redux/reducers/uiReducer.js","redux/reducers/updateReducer.js","redux/reducers/optionsReducer.js","redux/actions/options.js","redux/reducers/notificationsReducer.js","redux/actions/data.js","utilities/getStringDate.js","utilities/getUnixDateFromLuftdaten.js","utilities/getStringDateLuftdaten.js","utilities/GetMood.js","redux/models/station.js","redux/models/component.js","redux/middleware/normalizeLuftdaten.js","redux/middleware/normalizeUpperAustria.js","redux/middleware/notifications.js","redux/middleware/actionSplitter.js","redux/store.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","timeout","STATIONS","FETCH_STATIONS","concat","SET_STATIONS","ADD_STATION","ADD_STATIONS","UPDATE_STATIONS","UPDATE_STATION","FAVORIZE_STATION","UNFAVORIZE_STATION","addStation","_ref4","station","provider","type","payload","meta","feature","updateStation","_ref5","Stations","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickCircle","e","history","push","pathname","state","x","originalEvent","clientX","y","clientY","handleClickMap","handleLocationFound","setState","hasLocation","location","latlng","center","getLocation","refs","map","leafletElement","locate","getStations","myStations","stations","element","marker","L","divIcon","html","id","components","PM10","update","moodRGBA","className","iconSize","iconAnchor","react_default","a","createElement","Marker","key","icon","onClick","bubblingMouseEvents","position","longitude","latitude","title","name","stroke","fillOpacity","updateStations","forEach","newStation","markerID","document","querySelector","setAttribute","lat","lng","zoom","prevProps","_this2","length","timestamp","Map","onMovestart","maxZoom","doubleClickZoom","ref","TileLayer","attribution","url","Component","withRouter","connect","Aircomp","windforce","component","classes","value","unit","divStyle","transform","style","xmlns","version","width","height","viewBox","d","fill","toFixed","fontSize","Compass","orientation","available","platform","navigator","window","DeviceOrientationEvent","addEventListener","deviceOrientationHandler","bind","removeEventListener","event","webkitCompassHeading","winddirection","windStyle","parseFloat","gridStyle","legendStyle","lineStyle0","lineStyle90","button","clicked","children","mount","Howl","src","soundMount","unmount","soundUnmount","change","soundChange","Howler","volume","hexagon","circle","Station","onAddStation","onFavorizeStation","onRemoveStation","onUnfavorizeStation","share","text","then","console","log","catch","error","shape","animationCircle","animationHexagon","comps","compass","isMounted","play","clearTimeout","getElementById","getAirComps","setTimeout","beginElement","favorized","compItems","entries","_ref","_ref2","slicedToArray","components_Aircomp_Aircomp","components_Compass_Compass","_ref3","dateElement","sharedButton","date","undefined","innerWidth","Button_Button","strokeMiterlimit","strokeWidth","popOriginStyle","transformOrigin","moodStyle","react_transition_group","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","transitionLeaveTimeout","objectSpread","filter","begin","restart","attributeName","dur","to","ownProps","match","params","favorizedStations","dispatch","favorizeStation","unfavorizeStation","setNotification","message","Notifications","notifications","onRemoveNotification","notification","myInterval","setInterval","clearInterval","notificationId","removeNotification","legend","UpdateBar","progress","animate","cancelAnimationFrame","rafId","start","requestAnimationFrame","step","interval","luftdatenURL","luftdatenProvider","upperAustriaURL","upperAustriaProvider","Updating","Loading","App","onFetchStations","onUpdateStations","handleVisibilityChange","isVisible","timeoutID","localStorage","clear","err","clearState","reload","loading","updating","updateBar","components_Stations_Stations","Route","path","render","components_Station_Station","App_Loading","App_Updating","options","autoupdating","Updatebar_UpdateBar","ui_Notifications_Notifications","index_es5","onChange","clearStorage","Legend_Legend","ui","method","fetchStations","initState","stationsReducer","arguments","action","toConsumableArray","mood","apiRequest","body","apiSuccess","response","apiError","setLoader","setUpdater","stationsMiddleware","next","addStations","setUpdate","Date","now","status","getErrorMessage","GetDateFromTo","dateFrom","dateTo","setHours","getHours","getMinutes","setMinutes","getFullYear","getMonth","getDate","apiMiddleware","includes","_action$meta","fetch","handleResponse","_action$meta2","getDateFromTo","stringDateFrom","stringDateTo","getUpperAustriaURL","contentType","headers","get","json","ok","Promise","reject","assign","statusText","handleJSONResponse","handleTextResponse","Error","uiReducer","updateReducer","reversegeo","runaways","sort","optionsReducer","notificationsReducer","dataNormalized","getStringDateLuftdaten","tmpDate","year","month","day","getUTCDate","hours","minutes","seconds","getSeconds","getUnixDateFormLuftdaten","t","split","newDate","getTime","getUnixDateFromLuftdaten","getStringDate","valueDomain","colorRange","StationModel","opacity","scaleLinear","domain","range","clamp","parseInt","Number","normalizeLuftdatenMiddleware","getState","normalizeComponents","value_type","sensordatavalues","sensor","ReverseGeocode","geocodeService","reverse","distance","run","result","address","ShortLabel","stationModel","toString","persistedStations","find","filteredStation","normalizeUpperAustriaMiddleware","PM25","NO2","komponente","einheit","messwert","replace","filteredStations","el","mittelwert","groupBy","values","stationsObject","code","kurzname","zeitpunkt","geoBreite","geoLaenge","messwerte","notificationMiddleware","getMilliseconds","actionSplitterMiddleware","Array","isArray","_action","configureStore","rootReducer","combineReducers","featureMiddleware","coreMiddleware","enhancer","compose","applyMiddleware","apply","composeEnhancers","composeWithDevTools","maxAge","persistedState","serializedState","getItem","JSON","parse","loadState","store","createStore","subscribe","throttle","stringify","setItem","saveState","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","es","BrowserRouter","container_App_App","URL","process","origin","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oVCgCpCC,6HC/BSC,EAAW,aAIXC,EAAc,GAAAC,OAAMF,EAAN,UACdG,EAAY,GAAAD,OAAMF,EAAN,QACZI,EAAW,GAAAF,OALD,YAKC,QACXG,EAAY,GAAAH,OAAMF,EAAN,QACZM,EAAe,GAAAJ,OAAMF,EAAN,WACfO,EAAc,GAAAL,OARJ,YAQI,WACdM,EAAgB,GAAAN,OAAMF,EAAN,aAChBS,EAAkB,GAAAP,OAAMF,EAAN,eA2BlBU,EAAa,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,SAAZ,MAA4B,CAClDC,KAAMV,EACNW,QAASH,EACTI,KAAM,CAAEC,QAASjB,EAAUa,SAAUA,KAG5BK,EAAgB,SAAAC,GAAA,IAAGP,EAAHO,EAAGP,QAASC,EAAZM,EAAYN,SAAZ,MAA4B,CACrDC,KAAMP,EACNQ,QAASH,EACTI,KAAM,CAAEC,QAASjB,EAAUa,SAAUA,gDCvCnCO,sBACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAqCVQ,kBAAoB,SAAChB,EAAUD,GAAX,OAAuB,SAACkB,GACxCR,EAAKD,MAAMU,QAAQC,KAAK,CACpBC,SAAU,YAAcpB,EAAW,IAAMD,EACzCsB,MAAO,CACHC,EAAGL,EAAEM,cAAcC,QACnBC,EAAGR,EAAEM,cAAcG,aA3CZjB,EAiDnBkB,eAAiB,WACblB,EAAKD,MAAMU,QAAQC,KAAK,MAlDTV,EAqDnBmB,oBAAsB,SAAAX,GAClBR,EAAKoB,SAAS,CACVC,aAAa,EACbC,SAAUd,EAAEe,OACZC,OAAQhB,EAAEe,UAzDCvB,EA+DnByB,YAAc,WACVzB,EAAK0B,KAAKC,IAAIC,eAAeC,UAhEd7B,EAmEnB8B,YAAc,WACV,IAAIC,EAAa/B,EAAKD,MAAMiC,SAASL,IAAI,SAAAM,GACrC,IAAIC,EAAS,GA8Bb,MA5ByB,cAArBD,EAAQ1C,WACR2C,EAASC,IAAEC,QAAQ,CACfC,KAAI,6IAAAzD,OAEkBqD,EAAQK,GAF1B,4CAAA1D,OAGeqD,EAAQM,WAAWC,KAAKC,OAASR,EAAQS,SAAW,sBAHnE,wUAMJC,UAAW,iCACXC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,OAIA,iBAArBZ,EAAQ1C,WACR2C,EAASC,IAAEC,QAAQ,CACfC,KAAI,6IAAAzD,OAEkBqD,EAAQK,GAF1B,4CAAA1D,OAGeqD,EAAQM,WAAWC,KAAKC,OAASR,EAAQS,SAAW,sBAHnE,sOAMJC,UAAW,4CACXC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,OAKrBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,IAAKjB,EAAQK,GACba,KAAMjB,EACNkB,QAASpD,EAAKO,kBAAkB0B,EAAQ1C,SAAU0C,EAAQK,IAC1De,qBAAqB,EACrBC,SAAU,CAACrB,EAAQsB,UAAWtB,EAAQuB,UACtCC,MAAOxB,EAAQyB,KACfC,QAAQ,EACRC,YAAa,MAIzB5D,EAAKoB,SAAS,CAAEW,WAAYA,KAhHb/B,EAmHnB6D,eAAiB,WACb7D,EAAKY,MAAMmB,WAAW+B,QAAQ,SAAAxE,GAC1BU,EAAKD,MAAMiC,SAAS8B,QAAQ,SAAAC,GACxB,GAAIzE,EAAQ4D,MAAQa,EAAWzB,GAAK,CAChC,IAAI0B,EAAW,oBAAsBD,EAAWzB,GAAK,KACxC2B,SAASC,cAAcF,GAC7BG,aAAa,QAAS,UAAYJ,EAAWxB,WAAWC,KAAKC,OAASsB,EAAWrB,SAAW,8BAtH/G1C,EAAKY,MAAQ,CACTS,aAAa,EACbC,SAAU,CACN8C,IAAK,UACLC,IAAK,WAET7C,OAAQ,CACJ4C,IAAK,UACLC,IAAK,WAETC,KAAM,GACNvC,WAAY,IAdD/B,mFAmBfG,KAAK2B,cACL3B,KAAKsB,yDAGU8C,GAAW,IAAAC,EAAArE,KAC1BA,KAAKJ,MAAMiC,SAAS8B,QAAQ,SAACxE,GACrBkF,EAAKzE,MAAMiC,SAASyC,QAAUD,EAAKzE,MAAMiC,SAASyC,OAASF,EAAUvC,SAASyC,QAC9ED,EAAK1C,gBAKT3B,KAAKJ,MAAM0C,OAAOiC,UAAYH,EAAU9B,OAAOiC,WAC/CvE,KAAK0D,kDAgGT,IAAMvC,EAAWnB,KAAKS,MAAMS,YACxByB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQK,SAAUnD,KAAKS,MAAMU,WAC7B,KAEJ,OACIwB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAKhC,UAAU,gBACXS,QAASjD,KAAKe,eACd0D,YAAazE,KAAKe,eAClBM,OAAQrB,KAAKS,MAAMY,OACnB8C,KAAMnE,KAAKS,MAAM0D,KACjBO,QAAS,GAETC,gBAAgB,QAEhBC,IAAI,OACJjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAGIC,YAAY,0EAEZC,IAAM,6EAET5D,EACAnB,KAAKS,MAAMmB,mBAxJLoD,cAqKRC,cAAWC,YAPF,SAAAzE,GACpB,MAAO,CACHoB,SAAUpB,EAAMoB,SAChBS,OAAQ7B,EAAM6B,SAII4C,CAAyBvF,2BCnGpCwF,2LApEP,IAAIrD,EAAU,KACVsD,EAAY,EAGhB,OAAQpF,KAAKJ,MAAMyF,WACf,IAAK,MACL,IAAK,OACL,IAAK,OACD,IAAIC,EAAU,6CAA+CtF,KAAKJ,MAAMyF,UAErErF,KAAKJ,MAAM2F,MAAQ,IAClBzD,EACIa,EAAAC,EAAAC,cAAA,OAAKL,UAAW8C,GACZ3C,EAAAC,EAAAC,cAAA,OAAKL,UAAU,mBAAmBxC,KAAKJ,MAAMyF,UAA7C,KACA1C,EAAAC,EAAAC,cAAA,OAAKL,UAAU,mBAAwC,IAArBxC,KAAKJ,MAAM2F,MAAc,IAAMvF,KAAKJ,MAAM2F,MAAM5C,EAAAC,EAAAC,cAAA,QAAML,UAAU,kBAAhB,OAAwCxC,KAAKJ,MAAM4F,SAKjJ,MAEJ,IAAK,MAGD,IAAMC,EAAW,CACbC,UAAW,YAHC1F,KAAKJ,MAAM2F,OAAS,GAGQ,KAAO,QAGnDzD,EACIa,EAAAC,EAAAC,cAAA,OAAKL,UAAU,2BAA2BmD,MAAOF,GAC7C9C,EAAAC,EAAAC,cAAA,OAAKL,UAAU,+BAA+BoD,MAAM,6BAA6BC,QAAQ,MAAM1D,GAAG,UAAUzB,EAAE,MAAMG,EAAE,MAAMiF,MAAM,OAAOC,OAAO,OAAOC,QAAQ,eAC3JrD,EAAAC,EAAAC,cAAA,QAAMoD,EAAE,4RAA4RC,KAAK,SACzSvD,EAAAC,EAAAC,cAAA,SAAO+C,MAAM,OAIzB,MAEJ,IAAK,MACDR,EAAYpF,KAAKJ,MAAM2F,OAAS,EAEhCzD,EACIa,EAAAC,EAAAC,cAAA,OAAKL,UAAU,wBAAwB4C,EAAUe,QAAQ,GAAzD,SAGJ,MAEJ,IAAK,OACDrE,EACIa,EAAAC,EAAAC,cAAA,OACIL,UAAU,4BACVmD,MAAO,CACHS,SAA8B,SAApBpG,KAAKJ,MAAM4F,KAAkB,OAAS,YAEpD7C,EAAAC,EAAAC,cAAA,OAAKL,UAAU,mBAAmBxC,KAAKJ,MAAM2F,MAAMY,QAAQ,IAAM,GACjExD,EAAAC,EAAAC,cAAA,OAAKL,UAAU,kBAAf,cAShB,OAAOV,SAnEOkD,cCoGPqB,qNAnGX5F,MAAQ,CACJ6F,YAAa,EACbC,WAAW,EACXC,SAAUC,UAAUD,6FAIhBE,OAAOC,wBACPD,OAAOE,iBAAiB,oBAAqB5G,KAAK6G,yBAAyBC,KAAK9G,OAAO,kDAK3F0G,OAAOK,oBAAoB,oBAAqB/G,KAAK6G,yBAAyBC,KAAK9G,wDAG9DgH,GACjBA,EAAMC,sBAAgD,WAAxBjH,KAAKS,MAAM+F,WACzCxG,KAAKiB,SAAS,CAAEsF,WAAW,IAC3BvG,KAAKiB,SAAS,CAAEqF,YAAaU,EAAMC,qBAAqBd,QAAQ,uCAKpE,IAEIe,EAEJA,EAAgBlH,KAAKJ,MAAM2F,OAAS,EAOpC,IAAI4B,EAAY,CACZzB,UAAW,YANJ0B,WAAWpH,KAAKS,MAAM6F,aAAec,WAAWF,IAMrB,QAGlCG,EAAY,CACZ3B,UAAW,WAPP1F,KAAKS,MAAM6F,YAOe,QAG9BgB,EAAc,CACd5B,UAAW,UAAa1F,KAAKS,MAAM6F,YAAe,QAGlDiB,EAAa,CACb7B,UAAW,WAAc1F,KAAKS,MAAM6F,YAAe,QAGnDkB,EAAc,CACd9B,UAAW,WAAuC,GAAzB1F,KAAKS,MAAM6F,aAAoB,QAGxDxE,EAAU,KAwCd,OAtCI9B,KAAKS,MAAM8F,YACXzE,EAAUa,EAAAC,EAAAC,cAAA,OAAKL,UAAU,gBACrBG,EAAAC,EAAAC,cAAA,OAAK8C,MAAOwB,EAAW3E,UAAU,qBAC7BG,EAAAC,EAAAC,cAAA,OAEIL,UAAU,wBACVoD,MAAM,6BACNC,QAAQ,MACR1D,GAAG,UACHzB,EAAE,MAAMG,EAAE,MACViF,MAAM,OAAOC,OAAO,OACpBC,QAAQ,eACRrD,EAAAC,EAAAC,cAAA,QAAMqD,KAAMlG,KAAKJ,MAAM2C,SAAU0D,EAAE,uFAG3CtD,EAAAC,EAAAC,cAAA,OAAK8C,MAAO0B,EAAW7E,UAAU,qBAC7BG,EAAAC,EAAAC,cAAA,OAAK8C,MAAO2B,EAAa9E,UAAU,uBAC/BG,EAAAC,EAAAC,cAAA,OAAKL,UAAU,4BAAf,KACAG,EAAAC,EAAAC,cAAA,OAAK8C,MAAO4B,EAAY/E,UAAU,8BAEtCG,EAAAC,EAAAC,cAAA,OAAK8C,MAAO2B,EAAa9E,UAAU,uBAC/BG,EAAAC,EAAAC,cAAA,OAAKL,UAAU,4BAAf,KACAG,EAAAC,EAAAC,cAAA,OAAK8C,MAAO6B,EAAahF,UAAU,8BAEvCG,EAAAC,EAAAC,cAAA,OAAK8C,MAAO2B,EAAa9E,UAAU,uBAC/BG,EAAAC,EAAAC,cAAA,OAAKL,UAAU,4BAAf,KACAG,EAAAC,EAAAC,cAAA,OAAK8C,MAAO4B,EAAY/E,UAAU,8BAEtCG,EAAAC,EAAAC,cAAA,OAAK8C,MAAO2B,EAAa9E,UAAU,uBAC/BG,EAAAC,EAAAC,cAAA,OAAKL,UAAU,4BAAf,KACAG,EAAAC,EAAAC,cAAA,OAAK8C,MAAO6B,EAAahF,UAAU,iCAQ5CV,SAhGOkD,cCMPyC,UANA,SAAC7H,GAAD,OACX+C,EAAAC,EAAAC,cAAA,UAAQL,UAAW5C,EAAM4C,UAAWS,QAASrD,EAAM8H,SAC9C9H,EAAM+H,2ELcTC,EAAQ,IAAIC,OAAK,CACnBC,IAAK,CAACC,OAGJC,EAAU,IAAIH,OAAK,CACrBC,IAAK,CAACG,OAGJC,EAAS,IAAIL,OAAK,CACpBC,IAAK,CAACK,OAKVC,SAAOC,OAAO,KAEd,IAAMC,EAAU,kPACVC,EAAS,gOAETC,eACF,SAAAA,EAAY5I,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwI,IACf3I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0I,GAAArI,KAAAH,KAAMJ,KA2DV6I,aAAe,WACX5I,EAAKD,MAAM8I,kBAAkB7I,EAAKD,MAAMT,QAAQgD,KA7DjCtC,EAgEnB8I,gBAAkB,WACd9I,EAAKD,MAAMgJ,oBAAoB/I,EAAKD,MAAMT,QAAQgD,KAjEnCtC,EAoEnBgJ,MAAQ,WACApC,UAAUoC,OACVpC,UAAUoC,MAAM,CACZvF,MAAO,gCAA+BzD,EAAKD,MAAMT,QAAQoE,KACzDuF,KAAM,6DAA4DjJ,EAAKD,MAAMT,QAAQoE,KACrFwB,IAAK,2CAA6ClF,EAAKD,MAAMT,QAAQC,SAAW,IAAMS,EAAKD,MAAMT,QAAQgD,KAExG4G,KAAK,kBAAMC,QAAQC,IAAI,sBACvBC,MAAM,SAACC,GAAD,OAAWH,QAAQC,IAAI,gBAAiBE,MAzEvDtJ,EAAKY,MAAQ,CACT2I,MAAO,GACPC,gBAAiB,KACjBC,iBAAkB,KAClBC,MAAO,KACPC,QAAS,KACTC,WAAW,GATA5J,oIAgBfG,KAAKiB,SAAS,CAAEwI,WAAW,IAE3BzB,EAAQ0B,OACRhD,OAAOiD,aAAarL,+CAIpB0B,KAAKiB,SAAS,CAAEwI,WAAW,IAC3BzJ,KAAKiB,SAAS,CAAEoI,gBAAiBvF,SAAS8F,eAAe,yBACzD5J,KAAKiB,SAAS,CAAEqI,iBAAkBxF,SAAS8F,eAAe,0BAC1D5J,KAAKiB,SAAS,CAAEsI,MAAOvJ,KAAK6J,gBAEQ,iBAAhC7J,KAAKJ,MAAMT,QAAQC,UACnBY,KAAKiB,SAAS,CAAEmI,MAAOb,IAES,cAAhCvI,KAAKJ,MAAMT,QAAQC,UACnBY,KAAKiB,SAAS,CAAEmI,MAAOd,IAE3BhK,EAAUoI,OAAOoD,WAAWlC,EAAM8B,OAAQ,+CAG3BtF,GACXpE,KAAKJ,MAAMT,QAAQgD,KAAOiC,EAAUjF,QAAQgD,KAC5CnC,KAAKiB,SAAS,CAAEsI,MAAOvJ,KAAK6J,gBAC5B3B,EAAOwB,QAGP1J,KAAKJ,MAAM0C,OAAOiC,UAAYH,EAAU9B,OAAOiC,WAC/CvE,KAAKiB,SAAS,CAAEsI,MAAOvJ,KAAK6J,gBAGI,cAAhC7J,KAAKJ,MAAMT,QAAQC,UAA2D,cAA/BgF,EAAUjF,QAAQC,UACjEY,KAAKS,MAAM4I,gBAAgBU,eAGK,iBAAhC/J,KAAKJ,MAAMT,QAAQC,UAA8D,iBAA/BgF,EAAUjF,QAAQC,UACpEY,KAAKS,MAAM6I,iBAAiBS,eAG5B/J,KAAKJ,MAAMT,QAAQ6K,YAAc5F,EAAUjF,QAAQ6K,WACnD9B,EAAOwB,6CAwBD,IAAArF,EAAArE,KACNiK,EAAY,GAEhB,MAAoC,iBAAhCjK,KAAKJ,MAAMT,QAAQC,UACnBU,OAAOoK,QAAQlK,KAAKJ,MAAMT,QAAQiD,YAAYuB,QAAQ,SAAAwG,GAAkB,IAAAC,EAAAtK,OAAAuK,EAAA,EAAAvK,CAAAqK,EAAA,GAAhBpH,EAAgBqH,EAAA,GAAX7E,EAAW6E,EAAA,GACjD,gBAAf7E,EAAMC,KAENyE,EAAU1J,KAAKoC,EAAAC,EAAAC,cAACyH,EAAD,CAASvH,IAAKA,EACzBsC,UAAWtC,EACXwC,MAAOA,EAAMA,MACbC,KAAMD,EAAMC,QAEH,QAARzC,GACLsB,EAAKpD,SAAS,CACVuI,QAAS7G,EAAAC,EAAAC,cAAC0H,EAAD,CACLhF,MAAOA,EAAMA,UAGrB0E,EAAU1J,KAAKoC,EAAAC,EAAAC,cAACyH,EAAD,CAASvH,IAAKA,EACzBsC,UAAWtC,EACXwC,MAAOA,EAAMA,MACbC,KAAMD,EAAMC,SAGhByE,EAAU1J,KAAKoC,EAAAC,EAAAC,cAACyH,EAAD,CAASvH,IAAKA,EACzBsC,UAAWtC,EACXwC,MAAOA,EAAMA,MACbC,KAAMD,EAAMC,UAIhByE,GAGwB,cAAhCjK,KAAKJ,MAAMT,QAAQC,UACnBY,KAAKiB,SAAS,CAAEuI,QAAS,OAEzB1J,OAAOoK,QAAQlK,KAAKJ,MAAMT,QAAQiD,YAAYuB,QAAQ,SAAA6G,GAAkB,IAAAtL,EAAAY,OAAAuK,EAAA,EAAAvK,CAAA0K,EAAA,GAAhBzH,EAAgB7D,EAAA,GAAXqG,EAAWrG,EAAA,GACjD,gBAAfqG,EAAMC,MAENyE,EAAU1J,KAAKoC,EAAAC,EAAAC,cAACyH,EAAD,CAASvH,IAAKA,EACzBsC,UAAWtC,EACXwC,MAAOA,EAAMA,MACbC,KAAMD,EAAMC,UAIhByE,QAbZ,mCAkBA,IACIQ,EACAhD,EAEAlE,EADAmH,EAAe,KAEfhK,EAAI,SACJG,EAAI,UAER0C,EAAOvD,KAAKJ,MAAMT,QAAQoE,KAC1BkH,EAAc9H,EAAAC,EAAAC,cAAA,OAAKL,UAAU,qBAAqBxC,KAAKJ,MAAMT,QAAQwL,WAEnCC,IAA9B5K,KAAKJ,MAAMuB,SAASV,SAIhBC,EAHagG,OAAOmE,WAEP,IACT7K,KAAKJ,MAAMuB,SAASV,MAAMC,GAAKgG,OAAOmE,WAAa,KAAO,EAAI,KAE9D7K,KAAKJ,MAAMuB,SAASV,MAAMC,GAAKgG,OAAOmE,WAAa,KAAO,EAAI,KAEtEhK,EAAIb,KAAKJ,MAAMuB,SAASV,MAAMI,EAAI,MAItC4G,EAAS9E,EAAAC,EAAAC,cAACiI,EAAD,CAAQpD,QAAS1H,KAAKJ,MAAMT,QAAQ6K,UAAYhK,KAAK2I,gBAAkB3I,KAAKyI,aAAcjG,UAAU,iGACzGG,EAAAC,EAAAC,cAAA,OAAK+C,MAAM,6BACPI,QAAQ,oBACRxD,UAAU,4BACVG,EAAAC,EAAAC,cAAA,QAAMoD,EAAE,wWACJC,KAAMlG,KAAKJ,MAAMT,QAAQ6K,UAAY,4BAA8B,yBACnExG,OAAO,wBACPuH,iBAAiB,KACjBC,YAAY,SAIpBvE,UAAUoC,QACV6B,EAAe/H,EAAAC,EAAAC,cAACiI,EAAD,CAAQpD,QAAS1H,KAAK6I,MAAOrG,UAAU,mGAClDG,EAAAC,EAAAC,cAAA,OAAK+C,MAAM,6BACPE,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRxD,UAAU,4BACVG,EAAAC,EAAAC,cAAA,QAAMoD,EAAE,gBAAgBC,KAAK,SAC7BvD,EAAAC,EAAAC,cAAA,QAAMqD,KAAK,QACPD,EAAE,+WAKlB,IAAIgF,EAAiB,CACjBC,gBAAiBxK,EAAI,IAAMG,GAG3BsK,EAAY,CACZjF,KAAMlG,KAAKJ,MAAMT,QAAQiD,WAAWC,KAAKC,OAAStC,KAAKJ,MAAMT,QAAQoD,SAAW,uBAuDpF,OA5CII,EAAAC,EAAAC,cAACuI,EAAA,mBAAD,CACIzF,MATS,GAUT0F,eAAe,YACfC,kBAAkB,EAClBC,wBAAyB,IACzBC,iBAAiB,EACjBC,iBAAiB,EACjBC,uBAAwB,KACxB/I,EAAAC,EAAAC,cAAA,OAAKL,UAAU,eAAemD,MAAK7F,OAAA6L,EAAA,EAAA7L,CAAA,GAAOmL,IACtCtI,EAAAC,EAAAC,cAAA,OAAK+C,MAAM,6BACPD,MAAK7F,OAAA6L,EAAA,EAAA7L,CAAA,GAAOqL,GACZ3I,UAAU,0BACVwD,QAAQ,cACR4F,OAAO,8CACPjJ,EAAAC,EAAAC,cAAA,QAAMoD,EAAGjG,KAAKS,MAAM2I,OAChBzG,EAAAC,EAAAC,cAAA,WAASV,GAAG,sBACR0J,MAAM,2BACNC,QAAQ,SACR5F,KAAK,SACL6F,cAAc,IACdC,IAAI,QACJC,GAAI1D,IACR5F,EAAAC,EAAAC,cAAA,WAASV,GAAG,uBACR0J,MAAM,0BACNC,QAAQ,SACR5F,KAAK,SACL6F,cAAc,IACdC,IAAI,QACJC,GAAI3D,MAIhB3F,EAAAC,EAAAC,cAAA,MAAIL,UAAU,uBAAuBe,GACpCkH,EACAzK,KAAKS,MAAM8I,MACXvJ,KAAKS,MAAM+I,QACZ7G,EAAAC,EAAAC,cAAA,OAAKL,UAAU,yBACViF,EACAiD,YA5OH1F,aAyQPC,eAAWC,YAnBF,SAACzE,EAAOyL,GAC5B,MAAO,CACHrK,SAAUpB,EAAMoB,SAChB1C,SMhSuB0C,ENiSnBpB,EAAMoB,SMjSuBM,ENkS7B+J,EAASC,MAAMC,OAAOjK,GMjSvBN,EAAS+J,OAAO,SAAA/J,GAAQ,OAAIA,EAASM,KAAOA,IAAI,INmSnDG,OAAQ7B,EAAM6B,OACd+J,kBAAmB5L,EAAM4L,mBMrSH,IAACxK,EAAUM,GNySd,SAAAmK,GACvB,MAAO,CACH5D,kBAAmB,SAACvG,GAAD,OAAQmK,ECxPJ,SAACnK,GAAD,MAAS,CACpC9C,KAAMN,EACNO,QAAS6C,EACT5C,KAAM,CAAEC,QAASjB,IDqPuBgO,CAAgBpK,KACpDyG,oBAAqB,SAACzG,GAAD,OAAQmK,ECnPJ,SAACnK,GAAD,MAAS,CACtC9C,KAAML,EACNM,QAAS6C,EACT5C,KAAM,CAAEC,QAASjB,IDgPyBiO,CAAkBrK,OAItC+C,CAA6CsD,KO3S1DiE,GAAkB,SAAAtC,GAAA,IAAGuC,EAAHvC,EAAGuC,QAASlN,EAAZ2K,EAAY3K,QAAZ,MAA2B,CACtDH,KAAI,GAAAZ,OAAKe,EAAL,KAAAf,OALwB,oBAM5Ba,QAASoN,EACTnN,KAAM,CAAEC,aCFNmN,uBACJ,SAAAA,EAAY/M,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2M,IACjB9M,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6M,GAAAxM,KAAAH,KAAMJ,KAmBR6M,gBAAkB,WAEZ5M,EAAKD,MAAMgN,cAActI,OAAS,GACpCzE,EAAKD,MAAMiN,qBAAqBhN,EAAKD,MAAMgN,cAAc,GAAGzK,IAE5DtC,EAAKoB,SAAS,CACZ6L,aAAcjN,EAAKD,MAAMgN,cAAc,GAAGF,WAGD,IAApC7M,EAAKD,MAAMgN,cAActI,QAChCzE,EAAKoB,SAAS,CACZ6L,aAAcjN,EAAKD,MAAMgN,cAAc,GAAGF,SACzC,WACD7M,EAAKD,MAAMiN,qBAAqBhN,EAAKD,MAAMgN,cAAc,GAAGzK,OA9BhEtC,EAAKY,MAAQ,CACXqM,aAAc,MAJCjN,mFASjBG,KAAK+M,WAAaC,YAAYhN,KAAKyM,gBAAiB,KAEpDzM,KAAKiB,SAAS,CACZ6L,aAAc9M,KAAKJ,MAAMgN,cAAc,GAAGF,yDAK5CO,cAAcjN,KAAK+M,6CAsBnB,OACEpK,EAAAC,EAAAC,cAAA,MAAIL,UAAU,iBAAiBxC,KAAKS,MAAMqM,qBAzCpB9H,cA0DbE,eAZS,SAAAzE,GACtB,MAAO,CACLmM,cAAenM,EAAMmM,gBAIE,SAAAN,GACzB,MAAO,CACLO,qBAAsB,SAAC1K,GAAD,OAAQmK,EDjDA,SAAAlC,GAAA,IAAG8C,EAAH9C,EAAG8C,eAAgB1N,EAAnB4K,EAAmB5K,QAAnB,MAAkC,CAChEH,KAAI,GAAAZ,OAAKe,EAAL,KAAAf,OAV2B,uBAW/Ba,QAAS4N,EACT3N,KAAM,CAAEC,YC8C+B2N,CAAmB,CAAED,eAAgB/K,EAAI3C,QAAS,wBAI9E0F,CAA6CyH,IC7C7CS,WAfA,SAACxN,GAAD,OACX+C,EAAAC,EAAAC,cAAA,OAAKL,UAAU,eACXG,EAAAC,EAAAC,cAAA,OAAKL,UAAU,qBACXG,EAAAC,EAAAC,cAAA,OAAKL,UAAU,oDAAf,iBACAG,EAAAC,EAAAC,cAAA,OAAKL,UAAU,oDAAf,MACAG,EAAAC,EAAAC,cAAA,OAAKL,UAAU,6EACXG,EAAAC,EAAAC,cAAA,OAAKL,UAAU,iCAAf,KAAiDG,EAAAC,EAAAC,cAAA,WAAjD,SAEJF,EAAAC,EAAAC,cAAA,OAAKL,UAAU,oDAAf,MACAG,EAAAC,EAAAC,cAAA,OAAKL,UAAU,oDAAf,OACAG,EAAAC,EAAAC,cAAA,OAAKL,UAAU,oDAAf,WCVS6K,uBACjB,SAAAA,EAAYzN,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqN,IACjBxN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuN,GAAAlN,KAAAH,KAAMJ,KAEDa,MAAQ,CAEX6M,SAAU,GALKzN,mFAUjBG,KAAKuN,yDAILC,qBAAqBxN,KAAKyN,yCAGlB,IAAApJ,EAAArE,KAEF0N,EAAQ,KAcZ1N,KAAKyN,MAAQE,sBAbF,SAAPC,EAAOrJ,GACJmJ,IAAOA,EAAQnJ,GAEpB,IAAI+I,EAAW/I,EAAYmJ,EAC3BrJ,EAAKpD,SAAS,CAAEqM,aAEZA,EAAWjJ,EAAKzE,MAAMiO,WACxBxJ,EAAKzE,MAAM0C,SACXoL,EAAQ,MAGVrJ,EAAKoJ,MAAQE,sBAAsBC,sCAOvC,IAAIjI,EAAQ,CAAED,UAAS,UAAAjH,OAAauB,KAAKS,MAAM6M,SAAWtN,KAAKJ,MAAMiO,SAA9C,MAEvB,OAAOlL,EAAAC,EAAAC,cAAA,OAAK8C,MAAOA,EAAOnD,UAAU,2BAzCHwC,cCejC8I,WAAe,gFACfC,GAAoB,YACpBC,GAAkB,oEAClBC,GAAuB,eAEvBC,oLAEF,OAAOvL,EAAAC,EAAAC,cAAA,OAAKL,UAAU,iBAAf,uBAFYwC,aAMjBmJ,oLAEF,OAAOxL,EAAAC,EAAAC,cAAA,OAAKL,UAAU,gBAAf,uBAFWwC,aAMhBoJ,8MAoBJC,gBAAkB,WAChBxO,EAAKD,MAAMyO,gBAAgBP,GAAcC,GAAmB,SAC5DlO,EAAKD,MAAMyO,gBAAgBL,GAAiBC,GAAsB,YAGpEK,iBAAmB,WACjBzO,EAAKD,MAAMyO,gBAAgBP,GAAcC,GAAmB,UAC5DlO,EAAKD,MAAMyO,gBAAgBL,GAAiBC,GAAsB,aAGpEM,uBAAyB,SAAAC,GACvB3O,EAAKyO,uGA7BAtO,KAAKJ,MAAMiC,SAASyC,OAIvBtE,KAAKsO,mBAHLtO,KAAKqO,iEAQP3H,OAAOiD,aAAa3J,KAAKyO,mDCxBH,WACtB,IACIC,aAAaC,QAEjB,MAAOC,KDwBPC,GAEA7O,KAAKyO,UAAY/H,OAAOoD,WAAWpD,OAAOvF,SAAS2N,QAAO,GAAO,sCAiB1D,IAEH3P,EAFGkF,EAAArE,KACH6B,EAAW,KAEXkN,EAAU,KACVC,EAAW,KACXpC,EAAgB,KAChBqC,EAAY,KA4BhB,OA1BApN,EAAWc,EAAAC,EAAAC,cAACqM,EAAD,MAEX/P,EAAUwD,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACRC,KAAK,yBACLC,OAAQ,kBAAM1M,EAAAC,EAAAC,cAACyM,GAAD,SAEZtP,KAAKJ,MAAMmP,UACbA,EAAUpM,EAAAC,EAAAC,cAAC0M,GAAD,OAGRvP,KAAKJ,MAAMoP,WACbA,EAAWrM,EAAAC,EAAAC,cAAC2M,GAAD,OAGTxP,KAAKJ,MAAM6P,QAAQC,eACrBT,EAAYtM,EAAAC,EAAAC,cAAC8M,GAAD,CAAW9B,SAAU,KAAevL,OAAQtC,KAAKsO,oBAG3DtO,KAAKJ,MAAMgN,cAActI,SAC3BsI,EAAgBjK,EAAAC,EAAAC,cAAC+M,GAAD,CAAehD,cAAe5M,KAAKJ,MAAMgN,iBAGvD5M,KAAKJ,QACPiC,EAAWc,EAAAC,EAAAC,cAACqM,EAAD,CAAUrN,SAAU7B,KAAKJ,MAAMiC,SAAU4N,QAASzP,KAAKJ,MAAM6P,WAIxE9M,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAgBC,SAAU9P,KAAKuO,wBAC7B5L,EAAAC,EAAAC,cAAA,OAAKL,UAAU,OACbG,EAAAC,EAAAC,cAAA,OAAKL,UAAU,mBACbG,EAAAC,EAAAC,cAAA,OAAKL,UAAU,sBAAsBoD,MAAM,6BAA6BC,QAAQ,MAAM1D,GAAG,UAAUzB,EAAE,MAAMG,EAAE,MAAMiF,MAAM,OAAOC,OAAO,OAAOC,QAAQ,eACpJrD,EAAAC,EAAAC,cAAA,QAAMoD,EAAE,4RAA4RC,KAAK,WAG7SvD,EAAAC,EAAAC,cAACuI,EAAA,mBAAD,CACEC,eAAe,sBACfC,kBAAkB,EAClBC,wBAAyB,IACzBC,iBAAiB,EACjBC,iBAAiB,EACjBC,uBAAwB,KAEvBvM,EACA0C,EAEDc,EAAAC,EAAAC,cAAA,OAAKL,UAAU,qBACbG,EAAAC,EAAAC,cAACiI,EAAD,CACEtI,UAAU,iCACVkF,QAAS,kBAAMrD,EAAKgK,oBAFtB,SAKA1L,EAAAC,EAAAC,cAACiI,EAAD,CACEtI,UAAU,iCACVkF,QAAS,kBAAMrD,EAAKiK,qBAFtB,UAKA3L,EAAAC,EAAAC,cAACiI,EAAD,CACEtI,UAAU,iCACVkF,QAAS,kBAAMrD,EAAK0L,iBAFtB,UAMFpN,EAAAC,EAAAC,cAACmN,GAAD,MACCf,GAEHtM,EAAAC,EAAAC,cAACuI,EAAA,mBAAD,CACEC,eAAe,8BACfC,kBAAkB,EAClBC,wBAAyB,IACzBC,iBAAiB,EACjBC,iBAAiB,EACjBC,uBAAwB,KACvBqD,EACAC,EACApC,YApHK5H,aA6IHC,eAAWC,YAjBF,SAAAzE,GACtB,MAAO,CACLsO,QAAStO,EAAMwP,GAAGlB,QAClBC,SAAUvO,EAAMwP,GAAGjB,SACnBpC,cAAenM,EAAMmM,cACrBtK,OAAQ7B,EAAM6B,OACdT,SAAUpB,EAAMoB,SAChB4N,QAAShP,EAAMgP,UAIQ,SAAAnD,GACzB,MAAO,CACL+B,gBAAiB,SAACtJ,EAAKgJ,EAAmBmC,GAAzB,OAAoC5D,EV9J5B,SAACvH,EAAK3F,EAAU8Q,GAAhB,MAA4B,CACrD7Q,KAAMb,EAAiB,IAAM0R,EAC7B5Q,QAASyF,EACTxF,KAAM,CAAEC,QAASjB,EAAUa,SAAUA,EAAU8Q,OAAQA,IU2JOC,CAAcpL,EAAKgJ,EAAmBmC,OAI9EhL,CAA6CkJ,sDE/KjEgC,GAAY,GAELC,GAAkB,WAAkC,IAAjCxO,EAAiCyO,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GAAtBF,GAAWG,EAAWD,UAAAhM,OAAA,EAAAgM,UAAA,QAAA1F,EAC7D,OAAQ2F,EAAOlR,MAEX,KAAKX,EACD,OAAO6R,EAAOjR,QAElB,KAAKX,EACD,OAAOmB,OAAA0Q,GAAA,EAAA1Q,CAAI+B,GAAXpD,OAAA,CAAqB8R,EAAOjR,UAEhC,KAAKR,EACD,OAAO+C,EAASL,IAAI,SAACrC,GACjB,OAAIA,EAAQgD,KAAOoO,EAAOjR,QAAQ6C,GACvBrC,OAAA6L,EAAA,EAAA7L,CAAA,GACAX,EADP,CAEIwL,KAAM4F,EAAOjR,QAAQqL,KACrB8F,KAAMF,EAAOjR,QAAQmR,KACrBlO,SAAUgO,EAAOjR,QAAQiD,SACzBgB,KAA8B,OAAxBgN,EAAOjR,QAAQiE,KAAgBgN,EAAOjR,QAAQiE,KAAOpE,EAAQoE,KACnEnB,WAAWtC,OAAA6L,EAAA,EAAA7L,CAAA,GACJX,EAAQiD,WACRmO,EAAOjR,QAAQ8C,cAMvBjD,IAGf,KAAKJ,EACD,OAAO8C,EAASL,IAAI,SAACrC,GACjB,OAAIA,EAAQgD,KAAOoO,EAAOjR,QACfQ,OAAA6L,EAAA,EAAA7L,CAAA,GACAX,EADP,CAEI6K,WAAW,IAIZ7K,IAGf,KAAKH,EACD,OAAO6C,EAASL,IAAI,SAACrC,GACjB,OAAIA,EAAQgD,KAAOoO,EAAOjR,QACfQ,OAAA6L,EAAA,EAAA7L,CAAA,GACAX,EADP,CAEI6K,WAAW,IAIZ7K,IAGf,QACI,OAAO0C,ICpDN6O,GAAa,SAAAvG,GAAA,IAAGwG,EAAHxG,EAAGwG,KAAMT,EAAT/F,EAAS+F,OAAQnL,EAAjBoF,EAAiBpF,IAAKvF,EAAtB2K,EAAsB3K,QAASJ,EAA/B+K,EAA+B/K,SAAUkD,EAAzC6H,EAAyC7H,OAAzC,MAAuD,CAC7EjD,KAAI,GAAAZ,OAAKe,EAAL,KAAAf,OANmB,cAMnB,KAAAA,OAA+B6D,GACnChD,QAASqR,EACTpR,KAAM,CAAE2Q,SAAQnL,MAAKvF,UAASJ,WAAUkD,YAG/BsO,GAAa,SAAAxG,GAAA,IAAGyG,EAAHzG,EAAGyG,SAAUrR,EAAb4K,EAAa5K,QAASJ,EAAtBgL,EAAsBhL,SAAUkD,EAAhC8H,EAAgC9H,OAAhC,MAA8C,CACpEjD,KAAI,GAAAZ,OAAKe,EAAL,KAAAf,OAXmB,cAWnB,KAAAA,OAA+B6D,GACnChD,QAASuR,EACTtR,KAAM,CAAEC,UAASJ,WAAUkD,YAGlBwO,GAAW,SAAAtG,GAAA,IAAGrB,EAAHqB,EAAGrB,MAAO3J,EAAVgL,EAAUhL,QAASJ,EAAnBoL,EAAmBpL,SAAnB,MAAmC,CACvDC,KAAI,GAAAZ,OAAKe,EAAL,KAAAf,OAhBiB,aAiBrBa,QAAS6J,EACT5J,KAAM,CAAEC,UAASJ,cChBR2R,GAAY,SAAA5G,GAAA,IAAG1J,EAAH0J,EAAG1J,MAAOjB,EAAV2K,EAAU3K,QAAV,MAAyB,CAC9CH,KAAI,GAAAZ,OAAKe,EAAL,KAAAf,OALkB,cAMtBa,QAASmB,EACTlB,KAAM,CAAEC,aAGCwR,GAAa,SAAA5G,GAAA,IAAG3J,EAAH2J,EAAG3J,MAAOjB,EAAV4K,EAAU5K,QAAV,MAAyB,CAC/CH,KAAI,GAAAZ,OAAKe,EAAL,KAAAf,OAVmB,eAWvBa,QAASmB,EACTlB,KAAM,CAAEC,aCPL,IAAMyR,GAAqB,kBAAM,SAACC,GAAD,OAAU,SAACX,GAG/C,OAFAW,EAAKX,GAEGA,EAAOlR,MAEX,KAAKb,EAAiB,SAClB0S,EAAK,CACDR,GAAW,CAAEC,KAAM,KAAMT,OAAQ,MAAOnL,IAAKwL,EAAOjR,QAASE,QAASjB,EAAUa,SAAUmR,EAAOhR,KAAKH,SAAUkD,OAAQiO,EAAOhR,KAAK2Q,SACpIa,GAAU,CAAEtQ,OAAO,EAAMjB,QAASjB,MAEtC,MAEJ,KAAKC,EAAiB,UAOtB,KAAKK,EAAmB,IAAM0R,EAAOhR,KAAK2Q,OACtCgB,EAAK,CACDR,GAAW,CAAEC,KAAM,KAAMT,OAAQ,MAAOnL,IAAKwL,EAAOjR,QAASE,QAASjB,EAAUa,SAAUmR,EAAOhR,KAAKH,SAAUkD,OAAQiO,EAAOhR,KAAK2Q,SACpIc,GAAW,CAAEvQ,OAAO,EAAMjB,QAASjB,MAEvC,MAEJ,KAAKI,EACDuS,EAAK,IAGL,MAEJ,OAAAzS,OAAQF,EAAR,KAAAE,OFrCmB,cEqCnB,UACIyS,EAAK,CfbU,SAAA9G,GAAA,IAAGvI,EAAHuI,EAAGvI,SAAUzC,EAAbgL,EAAahL,SAAb,MAA6B,CACpDC,KAAMT,EACNU,QAASuC,EACTtC,KAAM,CAAEC,QAASjB,EAAUa,SAAUA,IeWzB+R,CAAY,CAAEtP,SAAU0O,EAAOjR,QAASF,SAAUmR,EAAOhR,KAAKH,WAC9D2R,GAAU,CAAEtQ,OAAO,EAAOjB,QAASjB,MAEvC,MAEJ,OAAAE,OAAQF,EAAR,KAAAE,OF5CmB,cE4CnB,WACIyS,EAAK,Cfda,SAAA1G,GAAA,IAAG3I,EAAH2I,EAAG3I,SAAUzC,EAAboL,EAAapL,SAAb,MAA6B,CACvDC,KAAMR,EACNS,QAASuC,EACTtC,KAAM,CAAEC,QAASjB,EAAUa,SAAUA,IeYzBsE,CAAe,CAAE7B,SAAU0O,EAAOjR,QAASF,SAAUmR,EAAOhR,KAAKH,WACjE4R,GAAW,CAAEvQ,OAAO,EAAOjB,QAASjB,IC7C3B,SAAA4L,GAAA,IAAG7H,EAAH6H,EAAG7H,OAAH,MAAiB,CACtCjD,KAAI,GAAAZ,OAJkB,cAKtBa,QAASgD,GD4CG8O,CAAU,CAAE9O,OAAQ+O,KAAKC,UAE7B,MAEJ,OAAA7S,OAAQF,EAAR,KAAAE,OFnDiB,aEoDbyS,EAAK,CACDzE,GAAgB,CAAEC,QExDnB,SAAyB6E,EAAQnS,GAC5C,IAAIsN,EAAU,YAEd,OAAQtN,GACJ,IAAK,YACDsN,GAAW,YACX,MACJ,IAAK,eACDA,GAAW,oBAMnB,OAAQ6E,GACJ,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IAGL,QACI7E,GAAW,uCAInB,OAAOA,EF8BgC8E,CAAgBjB,EAAOjR,QAAQiS,OAAQhB,EAAOhR,KAAKH,UAAWI,QAASjB,IAClGwS,GAAU,CAAEtQ,OAAO,EAAOjB,QAASjB,IACnCyS,GAAW,CAAEvQ,OAAO,EAAOjB,QAASjB,UG1D/BkT,cACjB,SAAAA,IAAe3R,OAAAC,EAAA,EAAAD,CAAAE,KAAAyR,GACXzR,KAAK0R,SAAW,IAAIL,KACpBrR,KAAK2R,OAAS,IAAIN,KAOlBrR,KAAK0R,SAASE,SAAS5R,KAAK0R,SAASG,YACrC7R,KAAK2R,OAAOC,SAAS5R,KAAK2R,OAAOE,YAE7B7R,KAAK0R,SAASI,aAAe,IAAM9R,KAAK0R,SAASI,aAAe,IAChE9R,KAAK0R,SAASK,WAAW,GACzB/R,KAAK2R,OAAOI,WAAW,KAGlB/R,KAAK0R,SAASI,aAAe,IAAM9R,KAAK0R,SAASI,cAAgB,IACtE9R,KAAK0R,SAASK,WAAW,IACzB/R,KAAK2R,OAAOI,WAAW,MAGlB/R,KAAK0R,SAASI,cAAgB,GAAK9R,KAAK0R,SAASI,cAAgB,MACtE9R,KAAK0R,SAASE,SAAS5R,KAAK0R,SAASG,WAAa,GAClD7R,KAAK2R,OAAOC,SAAS5R,KAAK2R,OAAOE,WAAa,GAC9C7R,KAAK0R,SAASK,WAAW,IACzB/R,KAAK2R,OAAOI,WAAW,kEAK3B,OAAO/R,KAAK0R,SAASM,cAAgB,KAAQhS,KAAK0R,SAASO,WAAa,EAAK,GAAK,KAAOjS,KAAK0R,SAASO,WAAa,GAAMjS,KAAK0R,SAASO,WAAa,GAAM,KAAOjS,KAAK0R,SAASQ,UAAY,GAAK,IAAMlS,KAAK0R,SAASQ,UAAYlS,KAAK0R,SAASQ,WAAa,KAAOlS,KAAK0R,SAASG,WAAa,GAAK,IAAM7R,KAAK0R,SAASG,WAAa7R,KAAK0R,SAASG,YAAc,KAAO7R,KAAK0R,SAASI,aAAe,GAAK,IAAM9R,KAAK0R,SAASI,aAAe9R,KAAK0R,SAASI,qDAI1b,OAAO9R,KAAK2R,OAAOK,cAAgB,KAAQhS,KAAK2R,OAAOM,WAAa,EAAK,GAAK,KAAOjS,KAAK2R,OAAOM,WAAa,GAAMjS,KAAK2R,OAAOM,WAAa,GAAM,KAAOjS,KAAK2R,OAAOO,UAAY,GAAK,IAAMlS,KAAK2R,OAAOO,UAAYlS,KAAK2R,OAAOO,WAAa,KAAOlS,KAAK2R,OAAOE,WAAa,GAAK,IAAM7R,KAAK2R,OAAOE,WAAa7R,KAAK2R,OAAOE,YAAc,KAAO7R,KAAK2R,OAAOG,aAAe,GAAK,IAAM9R,KAAK2R,OAAOG,aAAe9R,KAAK2R,OAAOG,uBCjCja,IAAMK,GAAgB,SAAAhI,GAAA,IAAGmC,EAAHnC,EAAGmC,SAAH,OAAkB,SAAC4E,GAAD,OAAU,SAACX,GAGtD,GAFAW,EAAKX,GAEDA,EAAOlR,KAAK+S,SNLO,gBMK2C,cAAzB7B,EAAOhR,KAAKH,SAA0B,KAAAiT,EAClB9B,EAAOhR,KAAxDoR,EADmE0B,EACnE1B,KAAM5L,EAD6DsN,EAC7DtN,IAAKmL,EADwDmC,EACxDnC,OAAQ1Q,EADgD6S,EAChD7S,QAASJ,EADuCiT,EACvCjT,SAAUkD,EAD6B+P,EAC7B/P,OAE9CgQ,MAAMvN,EAAK,CAAE4L,OAAMT,WACdnH,KAAKwJ,IACLxJ,KAAK,SAAA8H,GAAQ,OAAIvE,EAASsE,GAAW,CAAEC,WAAUrR,UAASJ,WAAUkD,cACpE4G,MAAM,SAAAC,GAAK,OAAImD,EAASwE,GAAS,CAAE3H,MAAOA,EAAO3J,UAASJ,gBAGnE,GAAImR,EAAOlR,KAAK+S,SNdO,gBMc2C,iBAAzB7B,EAAOhR,KAAKH,SAA6B,KAAAoT,EAC1BjC,EAAOhR,KAAnDoR,EADsE6B,EACtE7B,KAAMT,EADgEsC,EAChEtC,OAAQ1Q,EADwDgT,EACxDhT,QAASJ,EAD+CoT,EAC/CpT,SAAUkD,EADqCkQ,EACrClQ,OAErCyC,EChBG,SAA4BA,GACvC,IAGM0N,EAAgB,IAAIhB,GAO1B,OAFA1M,EAAMA,EAAM,UAHK0N,EAAcC,iBAGU,WAF1BD,EAAcE,eDSfC,CAAmBrC,EAAOhR,KAAKwF,KAEzCuN,MAAMvN,EAAK,CAAE4L,OAAMT,WACdnH,KAAKwJ,IACLxJ,KAAK,SAAA8H,GAAQ,OAAIvE,EAASsE,GAAW,CAAEC,WAAUrR,UAASJ,WAAUkD,cACpE4G,MAAM,SAAAC,GAAK,OAAImD,EAASwE,GAAS,CAAE3H,MAAOA,EAAO3J,UAASJ,oBAIvE,SAASmT,GAAgB1B,GACrB,IAAIgC,EAAchC,EAASiC,QAAQC,IAAI,gBACvC,GAAIF,EAAYT,SAAS,oBACvB,OASJ,SAA6BvB,GAC3B,OAAOA,EAASmC,OACbjK,KAAK,SAAAiK,GACJ,OAAInC,EAASoC,GACJD,EAEAE,QAAQC,OAAOrT,OAAOsT,OAAO,GAAIJ,EAAM,CAC5CzB,OAAQV,EAASU,OACjB8B,WAAYxC,EAASwC,gBAjBpBC,CAAmBzC,GACrB,GAAIgC,EAAYT,SAAS,aAC9B,OAqBJ,SAA6BvB,GAC3B,OAAOA,EAAS/H,OACbC,KAAK,SAAAD,GACJ,OAAI+H,EAASoC,GACJnK,EAEAoK,QAAQC,OAAO,CACpB5B,OAAQV,EAASU,OACjB8B,WAAYxC,EAASwC,WACrBzE,IAAK9F,MA9BJyK,CAAmB1C,GAG1B,MAAM,IAAI2C,MAAJ,uBAAA/U,OAAiCoU,EAAjC,mBEhCZ,IAAMzC,GAAY,CACdrB,SAAS,EACTC,UAAU,GAGDyE,GAAY,WAA4B,IAA3BxD,EAA2BK,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GAAtBF,GAAWG,EAAWD,UAAAhM,OAAA,EAAAgM,UAAA,QAAA1F,EACjD,QAAQ,GAEJ,KAAK2F,EAAOlR,KAAK+S,SPVC,cOWd,OAAOtS,OAAA6L,EAAA,EAAA7L,CAAA,GAAKmQ,EAAZ,CAAgBlB,QAASwB,EAAOjR,UAEpC,KAAKiR,EAAOlR,KAAK+S,SPZE,eOaf,OAAOtS,OAAA6L,EAAA,EAAA7L,CAAA,GAAKmQ,EAAZ,CAAgBjB,SAAUuB,EAAOjR,UAErC,QACI,OAAO2Q,IChBbG,GAAY,CACd7L,UAAW8M,KAAKC,OAGPoC,GAAgB,WAAgC,IAA/BpR,EAA+BgO,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GAAtBF,GAAWG,EAAWD,UAAAhM,OAAA,EAAAgM,UAAA,QAAA1F,EACzD,OAAQ2F,EAAOlR,MACX,INPkB,aMQd,OAAOS,OAAA6L,EAAA,EAAA7L,CAAA,GAAKwC,EAAZ,CAAoBiC,UAAWgM,EAAOjR,UAE1C,QACI,OAAOgD,ICVb8N,GAAY,CACduD,YAAY,EACZjE,cAAc,EACdkE,UAAU,EACVC,MAAM,GAGGC,GAAiB,WAAiC,IAAhCrE,EAAgCa,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GAAtBF,GAAWG,EAAWD,UAAAhM,OAAA,EAAAgM,UAAA,QAAA1F,EAC3D,QAAQ,GAEJ,KAAK2F,EAAOlR,KAAK+S,SCXY,yBDYzB,OAAOtS,OAAA6L,EAAA,EAAA7L,CAAA,GAAK2P,EAAZ,CAAqBkE,WAAYpD,EAAOjR,UAE5C,KAAKiR,EAAOlR,KAAK+S,SCbc,2BDc3B,OAAOtS,OAAA6L,EAAA,EAAA7L,CAAA,GAAK2P,EAAZ,CAAqBC,aAAca,EAAOjR,UAE9C,KAAKiR,EAAOlR,KAAK+S,SCfU,uBDgBvB,OAAOtS,OAAA6L,EAAA,EAAA7L,CAAA,GAAK2P,EAAZ,CAAqBmE,SAAUrD,EAAOjR,UAE1C,KAAKiR,EAAOlR,KAAK+S,SCjBM,mBDkBnB,OAAOtS,OAAA6L,EAAA,EAAA7L,CAAA,GAAK2P,EAAZ,CAAqBoE,KAAMtD,EAAOjR,UAEtC,QACI,OAAOmQ,IEvBbW,GAAY,GAEL2D,GAAuB,WAAuC,IAAtCnH,EAAsC0D,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GAAtBF,GAAWG,EAAWD,UAAAhM,OAAA,EAAAgM,UAAA,QAAA1F,EACvE,QAAQ,GAEJ,KAAK2F,EAAOlR,KAAK+S,SnBNO,oBmBOpB,OAAOtS,OAAA0Q,GAAA,EAAA1Q,CAAI8M,GAAXnO,OAAA,CAA0B8R,EAAOjR,UAErC,KAAKiR,EAAOlR,KAAK+S,SnBRU,uBmBSvB,OAAOxF,EAAchB,OAAO,SAAAkB,GAAY,OAAIA,EAAa3K,KAAOoO,EAAOjR,UAE3E,QACI,OAAOsN,4CCZNoH,GAAiB,SAAA7J,GAAA,IAAG3K,EAAH2K,EAAG3K,QAAH,MAAkB,CAC5CH,KAAI,GAAAZ,OAAKe,EAAL,KAAAf,OAHgB,mBAIpBc,KAAM,CAAEC,aCJG,SAASyU,GAAuBtJ,GAC3C,IAAIuJ,EAAU,IAAI7C,KAAK1G,GACnBwJ,EAAOD,EAAQlC,cACfoC,EAASF,EAAQjC,WAAa,EAC9BoC,EAAMH,EAAQI,aACdC,EAAQL,EAAQrC,WAChB2C,EAAUN,EAAQpC,aAClB2C,EAAUP,EAAQQ,aAoBtB,OAjBID,EAAU,KACVA,EAAU,IAAMA,GAEhBD,EAAU,KACVA,EAAU,IAAMA,GAEhBD,EAAQ,KACRA,EAAQ,IAAMA,GAEdH,EAAQ,KACRA,EAAQ,IAAMA,GAEdC,EAAM,KACNA,EAAM,IAAMA,GAEHF,EAAO,IAAMC,EAAQ,IAAMC,EAAM,IAAME,EAAQ,IAAMC,EAAU,IAAMC,ECzBvE,SAASE,GAAyBhK,GAE7C,IAAIiK,EAAIjK,EAAKkK,MAAM,SACf5O,EAAI,IAAIoL,KAAKuD,EAAE,GAAIA,EAAE,GAAG,EAAGA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAC/CE,EAAU,IAAIzD,KAAKpL,GAGvB,OAFA6O,EAAUA,EAAQC,UAAY,ICFnB,SAASd,GAAuBtJ,GAC3C,IAAImK,EAAUE,GAAyBrK,GAKvC,OAAOsK,GAAwB,KAF/BH,GAAW,qBCLTI,GAAc,CAAC,GAAI,GAAI,GAAI,IAAK,KAClCC,GAAa,CAAC,0BAA2B,2BAA4B,yBAA0B,yBAA0B,+BCDxGC,cACjB,SAAAA,IAUuB,IDRK7P,EAAO8P,ECFvBjW,EAUWkR,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GAVA,GACnBnO,EASmBmO,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GATd,EACL/M,EAQmB+M,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GARZ,cACP3F,EAOmB2F,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GAPZ,GACPlN,EAMmBkN,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GANP,EACZjN,EAKmBiN,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GALR,EACXlO,EAImBkO,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GAJN,GACbG,EAGmBH,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GAHZ,EAEPvO,GACmBuO,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,IAAAA,UAAA,GAAAA,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GADV,IACTtG,EAAmBsG,UAAAhM,OAAA,SAAAsG,IAAA0F,UAAA,KAAAA,UAAA,IAAAxQ,OAAAC,EAAA,EAAAD,CAAAE,KAAAoV,GACfpV,KAAKZ,SAAaA,EAClBY,KAAKmC,GAAaA,EAClBnC,KAAKuD,KAAaA,EAClBvD,KAAK2K,KAAaA,EAClB3K,KAAKoD,UAAaA,EAClBpD,KAAKqD,SAAaA,EAClBrD,KAAKoC,WAAaA,EAClBpC,KAAKyQ,KAAaA,EAClBzQ,KAAKuC,UDjBegD,ECiBMkL,EDhBlC0E,GAAa,sBAAA1W,OADsB4W,ECiBK,IDhB3B,2BAAA5W,OAAwD4W,EAAxD,yBAAA5W,OAAwF4W,EAAxF,yBAAA5W,OAAwH4W,EAAxH,0BAAA5W,OAAyJ4W,EAAzJ,MAEFC,eACNC,OAAOL,IACPM,MAAML,IACNM,OAAM,EAEJhF,CAAKiF,SAASnQ,EAAO,MCUpBvF,KAAK+B,OAAaA,EAClB/B,KAAKgK,UAAaA,wDAGV5K,GACZY,KAAKZ,SAAWA,8BAGV+C,GACNnC,KAAKmC,GAAKA,gCAGFoB,GACRvD,KAAKuD,KAAOA,qCAGCH,GACbpD,KAAKoD,UAAYA,oCAGLC,GACZrD,KAAKqD,SAAWA,sCAGFjB,GACdpC,KAAKoC,WAAaA,gCAGVqO,GACRzQ,KAAKyQ,KAAOA,oCAGAlO,GACZvC,KAAKuC,SAAWA,gCAGRoI,GACR3K,KAAK2K,KAAOA,uCAIZ,OAAO3K,KAAKoD,8CAIZ,OAAOpD,KAAKqD,uCAIZ,OAAOrD,KAAKmC,mCAIZ,OAAOnC,KAAKuD,2CAIZ,OAAOvD,KAAKoC,2CAIZ,OAAOpC,KAAKyQ,yCAIZ,OAAOzQ,KAAKuC,yCAIZ,OAAOvC,KAAK2K,cC5FC3F,cACjB,SAAAA,IAA0D,IAA9C3F,EAA8CiR,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GAAvC,GAAI/K,EAAmC+K,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GAA3B,EAAG9K,EAAwB8K,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,GAAAA,UAAA,GAAjB,GAAIhO,IAAagO,UAAAhM,OAAA,QAAAsG,IAAA0F,UAAA,KAAAA,UAAA,GAAAxQ,OAAAC,EAAA,EAAAD,CAAAE,KAAAgF,GACtDhF,KAAKX,KAAOA,EACZW,KAAKuF,MAAQoQ,OAAOpQ,EAAMY,QAAQ,IAClCnG,KAAKwF,KAAOA,EACZxF,KAAKsC,OAASA,oDAGNjD,GACRW,KAAKX,KAAOA,kCAIZ,OAAOW,KAAKX,oCAGHkG,GACTvF,KAAKuF,MAAQA,mCAIb,OAAOvF,KAAKuF,oCAGJC,GACRxF,KAAKwF,KAAOA,kCAIZ,OAAOxF,KAAKwF,qCAGFlD,GACVtC,KAAKsC,OAASA,oCAId,OAAOtC,KAAKsC,gBC1BPsT,GAA+B,SAAAzL,GAAA,IAAGmC,EAAHnC,EAAGmC,SAAUuJ,EAAb1L,EAAa0L,SAAb,OAA4B,SAAC3E,GAAD,OAAU,SAACX,GAC/E,IAAqB1O,EAAUzC,EAmGzB0W,EAAsB,SAAChU,GACzB,IAAIM,EAAa,GAQjB,OANAN,EAAQ6B,QAAQ,SAAA0B,GACZ,IAAIhG,EAAgC,OAAzBgG,EAAU0Q,WAAsB,OAAS,OAEpD3T,EAAW/C,GAAQ,IAAI2F,GAAU3F,EAAM+H,WAAW/B,EAAUE,OAAQ,iBAGjEnD,GAIPmO,EAAOlR,KAAK+S,SAASxT,IAA0C,cAAzB2R,EAAOhR,KAAKH,UAhHjCyC,EAiHL0O,EAAOjR,QAjHQF,EAiHCmR,EAAOhR,KAAKH,SAhHpCyC,IACAA,EAASL,IAAI,SAAArC,GACT,IAAIiD,EAAa0T,EAAoB3W,EAAQ6W,kBACzCzS,EAAQ,mBAAqBpE,EAAQ8W,OAAO9T,GAE5C0T,IAAWpG,QAAQkE,iBAAiC/I,IAAnBsL,MACjCA,KAAeC,iBAAiBC,UAC3BhV,OAAO,CAACjC,EAAQgC,SAASkC,SAAUlE,EAAQgC,SAASiC,YACpDiT,SAAS,IACTC,IAAI,SAAUnN,EAAOoN,GAIlB,GAHIpN,IACA5F,EAAO,oBAAsBpE,EAAQgD,IAErCoU,EAAQ,CACRhT,EAAOgT,EAAOC,QAAQC,WAEtB,IAAIC,EAAe,IAAIlO,GAAQpJ,EAC3BD,EAAQ8W,OAAO9T,GAAGwU,WAClBpT,EACA0Q,GAAuB9U,EAAQoF,WAC/B6C,WAAWjI,EAAQgC,SAASkC,UAC5B+D,WAAWjI,EAAQgC,SAASiC,WAC5BhB,EACAA,EAAWC,KAAO+E,WAAWhF,EAAWC,KAAKkD,OAAS,GAE1D+G,EAAS7M,EAAc,CAAEN,QAASuX,EAActX,SAAUA,QAK1E,IAAIsX,EAAe,IAAIlO,GAAQpJ,EAC3BD,EAAQ8W,OAAO9T,GAAGwU,WAClBpT,EACA0Q,GAAuB9U,EAAQoF,WAC/B6C,WAAWjI,EAAQgC,SAASkC,UAC5B+D,WAAWjI,EAAQgC,SAASiC,WAC5BhB,EACAA,EAAWC,KAAOD,EAAWC,KAAKkD,MAAQ,GAE1CqR,EAAoBf,IAAWhU,SAEnC,GAAI+U,EAAkBtS,OAAQ,CAC1B,QAAyDsG,IAArDiM,KAAKD,EAAmB,CAAC,KAAMF,EAAavU,MAAsBuU,EAAajG,KAAO,KACtF,OAAO,EAGPnE,EAASrN,EAAW,CAAEE,QAASuX,EAActX,SAAUA,UAG1D,GAAIsX,EAAajG,KAAO,KACzB,OAAOnE,EAASrN,EAAW,CAAEE,QAASuX,EAActX,SAAUA,KAIlE,OAAO,IAKXkN,EAAS0H,GAAe,CAAExU,QAAS+Q,EAAOhR,KAAKC,aAwD9C+Q,EAAOlR,KAAK+S,SAASvT,IAA6C,cAAzB0R,EAAOhR,KAAKH,SApDvC,SAACyC,EAAUzC,GAC1ByC,IACAA,EAASL,IAAI,SAAArC,GACT,IAAIiD,EAAa0T,EAAoB3W,EAAQ6W,kBAGzCU,EAAe,IAAIlO,GAAQpJ,EAC3BD,EAAQ8W,OAAO9T,GAAGwU,WAHX,KAKP1C,GAAuB9U,EAAQoF,WAC/B6C,WAAWjI,EAAQgC,SAASkC,UAC5B+D,WAAWjI,EAAQgC,SAASiC,WAC5BhB,EACAA,EAAWC,KAAOD,EAAWC,KAAKkD,MAAQ,GAE1CuR,EAAkBjB,IAAWhU,SAAS+J,OAAO,SAAAzM,GAAO,OAAIA,EAAQgD,KAAOuU,EAAavU,KAExF,QAAI2U,EAAgBxS,QACZ0Q,GAAyB8B,EAAgB,GAAGnM,MAAQqK,GAAyB0B,EAAa/L,OACnF2B,EAAS7M,EAAc,CAAEN,QAASuX,EAActX,SAAUA,OAY7EkN,EAAS0H,GAAe,CAAExU,QAAS+Q,EAAOhR,KAAKC,YAsBnDkE,CAAe6M,EAAOjR,QAASiR,EAAOhR,KAAKH,UAE3C8R,EAAKX,mCCvHAwG,GAAkC,SAAA5M,GAAA,IAAGmC,EAAHnC,EAAGmC,SAAUuJ,EAAb1L,EAAa0L,SAAb,OAA4B,SAAC3E,GAAD,OAAU,SAACX,GAElF,IA+FMuF,EAAsB,SAAChU,GACzB,IAAIM,EAAa,GACbC,GAAO,EACP2U,GAAO,EACPC,GAAM,EA2DV,OAzDAnV,EAAQ6B,QAAQ,SAAA0B,GACZ,IAAIhG,EAAOgG,EAAU6R,WACjB3R,EAAQ,EACRC,EAAOH,EAAU8R,QAGrB,OAAQ9R,EAAU6R,YACd,IAAK,WACD7X,EAAO,OACPgD,GAAO,EACP,MAEJ,IAAK,WACDhD,EAAO,OACP2X,GAAO,EACP,MAEJ,IAAK,MACDC,GAAM,EACN,MAEJ,QACI5X,EAAOgG,EAAU6R,WAGzB,OAAQ7R,EAAU8R,SACd,IAAK,QACD3R,EAAO,cACPD,EAA2D,IAAnD6B,WAAW/B,EAAU+R,SAASC,QAAQ,IAAK,MACnD,MAEJ,IAAK,MACD7R,EAAO,OACPD,EAA2D,IAAnD6B,WAAW/B,EAAU+R,SAASC,QAAQ,IAAK,MACnD,MAEJ,QACI7R,EAAOH,EAAU8R,QACjB5R,EAAQ6B,WAAW/B,EAAU+R,SAASC,QAAQ,IAAK,MAG3DjV,EAAW/C,GAAQ,IAAI2F,GAAU3F,EAAMkG,EAAOC,GArCjC,KAyCZnD,IACDD,EAAU,KAAW,IAAI4C,GAAU,OAAQ,EAAG,eAAS,IAGtDgS,IACD5U,EAAU,KAAW,IAAI4C,GAAU,OAAQ,EAAG,eAAS,IAGtDiS,IACD7U,EAAU,IAAU,IAAI4C,GAAU,MAAO,EAAG,eAAS,IAGlD5C,GAIPmO,EAAOlR,KAAK+S,SAASxT,IAA0C,iBAAzB2R,EAAOhR,KAAKH,SAlKlC,SAACyC,EAAUzC,GAC3B,IAAIkY,EAAmB,KAEnBzV,IACAyV,EAAmBzV,EAAS+J,OAAO,SAAA2L,GAC/B,OAAOA,EAAGpY,QAAQgN,MAAM,MAA0B,QAAlBoL,EAAGC,aAGvCF,EAAmBG,KAAQH,EAAkB,WAE7CxX,OAAO4X,OAAOJ,GAAkB3T,QAAQ,SAAA7B,GACpC6V,KAAyBhU,QAAQ,SAAAxE,GAC7B,GAAIA,EAAQyY,OAAS9V,EAAQ,GAAG3C,QAAS,CACrC,IAAIiD,EAAa0T,EAAoBhU,GAEjC4U,EAAe,IAAIlO,GAAQ,eAC3B1G,EAAQ,GAAG3C,QACXA,EAAQ0Y,SACR5C,GAAcnT,EAAQ,GAAGgW,WACzB3Y,EAAQ4Y,UACR5Y,EAAQ6Y,UACR5V,EACAA,EAAWC,KAAOD,EAAWC,KAAKkD,MAAQ,GAE1CqR,EAAoBf,IAAWhU,SAEnC,OAAI+U,EAAkBtS,YACuCsG,IAArDiM,KAAKD,EAAmB,CAAC,KAAMF,EAAavU,OAI5CmK,EAASrN,EAAW,CAAEE,QAASuX,EAActX,SAAUA,MAQxD,GAJIkN,EAASrN,EAAW,CAAEE,QAASuX,EAActX,SAAUA,UAU9EkN,EAAS0H,GAAe,CAAExU,QAAS+Q,EAAOhR,KAAKC,YAsHnD2R,CAAYZ,EAAOjR,QAAQ2Y,UAAW1H,EAAOhR,KAAKH,UAE7CmR,EAAOlR,KAAK+S,SAASvT,IAA6C,iBAAzB0R,EAAOhR,KAAKH,SApHvC,SAACyC,EAAUzC,GAC9B,IAAIkY,EAAmB,KAEnBzV,IACAyV,EAAmBzV,EAAS+J,OAAO,SAAA2L,GAC/B,OAAOA,EAAGpY,QAAQgN,MAAM,MAA0B,QAAlBoL,EAAGC,aAGvCF,EAAmBG,KAAQH,EAAkB,WAE7CxX,OAAO4X,OAAOJ,GAAkB3T,QAAQ,SAAA7B,GACpC6V,KAAyBhU,QAAQ,SAAAxE,GAC7B,GAAIA,EAAQyY,OAAS9V,EAAQ,GAAG3C,QAAS,CACrC,IAAIiD,EAAa0T,EAAoBhU,GAEjC4U,EAAe,IAAIlO,GAAQ,eAC3B1G,EAAQ,GAAG3C,QACXA,EAAQ0Y,SACR5C,GAAcnT,EAAQ,GAAGgW,WACzB3Y,EAAQ4Y,UACR5Y,EAAQ6Y,UACR5V,EACAA,EAAWC,KAAOD,EAAWC,KAAKkD,MAAQ,GAI9C,QAFsBsQ,IAAWhU,SAAS+J,OAAO,SAAAzM,GAAO,OAAIA,EAAQgD,KAAOuU,EAAavU,KAEpEmC,QAETgI,EAAS7M,EAAc,CAAEN,QAASuX,EAActX,SAAUA,UAcjFkN,EAAS0H,GAAe,CAAExU,QAAS+Q,EAAOhR,KAAKC,YA2EnDkE,CAAe6M,EAAOjR,QAAQ2Y,UAAW1H,EAAOhR,KAAKH,UAGrD8R,EAAKX,MCrLA2H,GAAyB,kBAAM,SAAChH,GAAD,OAAU,SAACX,GAEnD,GAAIA,EAAOlR,KAAK+S,S7BHY,oB6BGgB,KAChC9S,EAAkBiR,EAAlBjR,QAASC,EAASgR,EAAThR,KACX4C,GAAK,IAAIkP,MAAO8G,kBAUtBjH,EAAKzE,GAAgB,CAAEC,QAPF,CACjBvK,KACAuK,QAASpN,GAKiCE,QAASD,EAAKC,gBAG5D0R,EAAKX,MCnBA6H,GAA2B,kBAAM,SAAClH,GAAD,OAAU,SAACX,GACjD8H,MAAMC,QAAQ/H,GACdA,EAAO5M,QAAQ,SAAA4U,GAAO,OAAIrH,EAAKqH,KAE/BrH,EAAKX,MCuEEiI,GAxDQ,WAEnB,IAAMC,EAAcC,2BAAgB,CAChC7W,SAAUwO,GACVJ,GAAIwD,GACJ7G,cAAemH,GACfzR,OAAQoR,GACRjE,QAASqE,KAIP6E,EAAoB,CACtB1H,IAIE2H,EAAiB,CACnBR,GACAjG,GACAyD,GACAmB,GACAmB,IASEW,EAAWC,mBACbC,mBAAeC,WAAf,EAAmBL,EAAnBla,OAAyCma,KAGvCK,EAAmBC,+BAVT,CACZC,OAAQ,MAWNC,E1BvDe,WACrB,IACI,IAAMC,EAAkB3K,aAAa4K,QAAQ,SAC7C,GAAwB,OAApBD,EACA,OAEJ,OAAOE,KAAKC,MAAMH,GAEtB,MAAOzK,GACH,Q0B8CmB6K,GAEjBC,EAAQC,uBACVlB,EACAW,EACAH,EACAJ,IAWJ,OAPAa,EAAME,UAAUC,KAAS,Y1BpDJ,SAACpZ,GACtB,IACI,IAAM4Y,EAAkBE,KAAKO,UAAUrZ,GACvCiO,aAAaqL,QAAQ,QAASV,GAElC,MAAOzK,K0BgDHoL,CAAU,CACNnY,SAAU6X,EAAM7D,WAAWhU,SAC3BwK,kBAAmBqN,EAAM7D,WAAWxJ,qBAEzC,MAEIqN,GC9DLO,GAAcC,QACW,cAA7BxT,OAAOvF,SAASgZ,UAEe,UAA7BzT,OAAOvF,SAASgZ,UAEhBzT,OAAOvF,SAASgZ,SAAShO,MACvB,2DAsCN,SAASiO,GAAgBC,EAAOC,GAC9B7T,UAAU8T,cACPC,SAASH,GACTtR,KAAK,SAAA0R,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBla,QACfgG,UAAU8T,cAAcO,YAK1B9R,QAAQC,IAAI,6CAGRqR,EAAOS,UACTT,EAAOS,SAASN,KAMlBzR,QAAQC,IAAI,sCAGRqR,EAAOU,WACTV,EAAOU,UAAUP,SAO5BvR,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,gBC/E3DuQ,GAAQlB,KAEdyC,IAAS5L,OACL1M,EAAAC,EAAAC,cAACqY,EAAA,EAAD,CAAUxB,MAAOA,IACb/W,EAAAC,EAAAC,cAACsY,EAAA,EAAD,KACIxY,EAAAC,EAAAC,cAACuY,GAAD,QAGRtX,SAAS8F,eAAe,SDErB,SAAkB0Q,GACvB,GAA6C,kBAAmB7T,UAAW,CAGzE,GADkB,IAAI4U,IAAIC,GAAwB5U,OAAOvF,UAC3Coa,SAAW7U,OAAOvF,SAASoa,OAIvC,OAGF7U,OAAOE,iBAAiB,OAAQ,WAC9B,IAAMyT,EAAK,GAAA5b,OAAM6c,GAAN,sBAEPrB,IA2DV,SAAiCI,EAAOC,GAEtChI,MAAM+H,GACHtR,KAAK,SAAA8H,GAGkB,MAApBA,EAASU,SACuD,IAAhEV,EAASiC,QAAQC,IAAI,gBAAgByI,QAAQ,cAG7C/U,UAAU8T,cAAckB,MAAM1S,KAAK,SAAA0R,GACjCA,EAAaiB,aAAa3S,KAAK,WAC7BrC,OAAOvF,SAAS2N,aAKpBsL,GAAgBC,EAAOC,KAG1BpR,MAAM,WACLF,QAAQC,IACN,mEA/EA0S,CAAwBtB,EAAOC,GAI/B7T,UAAU8T,cAAckB,MAAM1S,KAAK,WACjCC,QAAQC,IACN,+GAMJmR,GAAgBC,EAAOC,MCzB/BC","file":"static/js/main.4aa8e83f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Tab 2.46782a7e.m4a\";","module.exports = __webpack_public_path__ + \"static/media/Tab 1.c217bc9a.m4a\";","module.exports = __webpack_public_path__ + \"static/media/Button 7.03b1300f.m4a\";","import React, { Component } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Howl, Howler } from 'howler';\n\nimport { favorizeStation, unfavorizeStation } from \"../../redux/actions/stations\";\nimport { getStationByID } from \"../../redux/filters/getStationByID\";\n\nimport Aircomp from '../../components/Aircomp/Aircomp';\nimport Compass from '../../components/Compass/Compass';\nimport Button from '../../components/UI/Button/Button';\nimport './Station.css';\n\n// http://facebook.design/soundkit#scroll\nimport soundMount from '../../audio/Tab 2.m4a';\nimport soundUnmount from '../../audio/Tab 1.m4a';\nimport soundChange from '../../audio/Button 7.m4a';\n\n// howl\nconst mount = new Howl({\n    src: [soundMount]\n});\n\nconst unmount = new Howl({\n    src: [soundUnmount]\n});\n\nconst change = new Howl({\n    src: [soundChange]\n});\n\nlet timeout;\n\nHowler.volume(0.15);\n\nconst hexagon = \"M41.59,163.45v273.1a21.91,21.91,0,0,0,10.95,19L289.05,592.07a21.91,21.91,0,0,0,21.9,0L547.46,455.52a21.91,21.91,0,0,0,10.95-19V163.45a21.91,21.91,0,0,0-10.95-19L311,7.93a21.91,21.91,0,0,0-21.9,0L52.54,144.48A21.91,21.91,0,0,0,41.59,163.45Z\";\nconst circle = \"M5,300v.1a294.91,294.91,0,0,0,147.46,255.4l.08,0a294.93,294.93,0,0,0,294.92,0l.08,0A294.91,294.91,0,0,0,595,300.05V300A294.91,294.91,0,0,0,447.54,44.55l-.08,0a294.93,294.93,0,0,0-294.92,0l-.08,0A294.91,294.91,0,0,0,5,300Z\";\n\nclass Station extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            shape: \"\",\n            animationCircle: null,\n            animationHexagon: null,\n            comps: null,\n            compass: null,\n            isMounted: false\n        }\n    }\n\n    componentWillMount() {}\n\n    componentWillUnmount() {\n        this.setState({ isMounted: false })\n\n        unmount.play();\n        window.clearTimeout(timeout);\n    }\n\n    componentDidMount() {\n        this.setState({ isMounted: true })\n        this.setState({ animationCircle: document.getElementById(\"animation-to-circle\") })\n        this.setState({ animationHexagon: document.getElementById(\"animation-to-hexagon\") })\n        this.setState({ comps: this.getAirComps() })\n\n        if (this.props.station.provider === \"upperaustria\")\n            this.setState({ shape: circle })\n\n        if (this.props.station.provider === \"luftdaten\")\n            this.setState({ shape: hexagon })\n\n        timeout = window.setTimeout(mount.play(), 50);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.station.id !== prevProps.station.id) {\n            this.setState({ comps: this.getAirComps() });\n            change.play();\n        }\n\n        if (this.props.update.timestamp > prevProps.update.timestamp) {\n            this.setState({ comps: this.getAirComps() });\n        }\n\n        if (this.props.station.provider !== \"luftdaten\" && prevProps.station.provider === \"luftdaten\") {\n            this.state.animationCircle.beginElement();\n        }\n\n        if (this.props.station.provider !== \"upperaustria\" && prevProps.station.provider === \"upperaustria\") {\n            this.state.animationHexagon.beginElement();\n        }\n\n        if (this.props.station.favorized !== prevProps.station.favorized) {\n            change.play();\n        }\n    }\n\n    onAddStation = () => {\n        this.props.onFavorizeStation(this.props.station.id);\n    }\n\n    onRemoveStation = () => {\n        this.props.onUnfavorizeStation(this.props.station.id);\n    }\n\n    share = () => {\n        if (navigator.share) {\n            navigator.share({\n                title: \"Airodrome / Luftqualität: \" + this.props.station.name,\n                text: 'Verfolgen Sie die aktuelle Luftqualität an der Station ' + this.props.station.name,\n                url: 'https://airodrome.herokuapp.com/station/' + this.props.station.provider + \"/\" + this.props.station.id\n            })\n                .then(() => console.log('Successful share'))\n                .catch((error) => console.log('Error sharing', error));\n        }\n    }\n\n    getAirComps() {\n        let compItems = [];\n\n        if (this.props.station.provider === \"upperaustria\") {\n            Object.entries(this.props.station.components).forEach(([key, value]) => {\n                if (value.unit === \"µg/m³\") {\n                    \n                    compItems.push(<Aircomp key={key}\n                        component={key}\n                        value={value.value}\n                        unit={value.unit} />);\n                }\n                else if (key === \"WIR\") {\n                    this.setState({\n                        compass: <Compass\n                            value={value.value} />\n                    })\n\n                    compItems.push(<Aircomp key={key}\n                        component={key}\n                        value={value.value}\n                        unit={value.unit} />);\n                }\n                else {\n                    compItems.push(<Aircomp key={key}\n                        component={key}\n                        value={value.value}\n                        unit={value.unit} />);\n                }\n            });\n\n            return (compItems);\n        }\n\n        if (this.props.station.provider === \"luftdaten\") {\n            this.setState({ compass: null });\n\n            Object.entries(this.props.station.components).forEach(([key, value]) => {\n                if (value.unit === \"µg/m³\") {\n                        \n                    compItems.push(<Aircomp key={key}\n                        component={key}\n                        value={value.value}\n                        unit={value.unit} />);\n                }\n            });\n\n            return (compItems);\n        }\n    }\n\n    render() {\n        let element = null;\n        let dateElement = null;\n        let button = null;\n        let sharedButton = null;\n        let name = \"Station\";\n        let x = \"center\";\n        let y = \"center\";\n        \n        name = this.props.station.name;\n        dateElement = <div className=\"air__station-date\">{this.props.station.date}</div>;\n\n        if (this.props.location.state !== undefined) {\n            let innerWidth = window.innerWidth;\n\n            if (innerWidth > 330)\n                x = this.props.location.state.x - (window.innerWidth - 330) / 2 + \"px\";\n            else\n                x = this.props.location.state.x - (window.innerWidth - 288) / 2 + \"px\";\n\n            y = this.props.location.state.y + \"px\";\n        }\n\n\n        button = <Button clicked={this.props.station.favorized ? this.onRemoveStation : this.onAddStation} className=\"air__button air__button--naked air__button--ghost air__station-button air__station-button-fav\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 573.99 546.92\"\n                className=\"air__station-button-icon\">\n                <path d=\"M295.99 6.05l80.79 163.7a10 10 0 0 0 7.53 5.47l180.68 26.24a10 10 0 0 1 5.54 17.06L439.75 345.96a10 10 0 0 0-2.87 8.85l30.86 179.93a10 10 0 0 1-14.51 10.54l-161.59-85a9.94 9.94 0 0 0-9.3 0l-161.59 85a10 10 0 0 1-14.51-10.54l30.86-179.93a10 10 0 0 0-2.87-8.85L3.5 218.53a10 10 0 0 1 5.54-17.07l180.66-26.25a10 10 0 0 0 7.53-5.47L277.99 6.05a10 10 0 0 1 18 0z\"\n                    fill={this.props.station.favorized ? \"rgba(255, 255, 255, 0.85)\" : \"rgba(255, 255, 255, 0)\"}\n                    stroke=\"rgba(255,255,255,0.9)\"\n                    strokeMiterlimit=\"10\"\n                    strokeWidth=\"24\" />\n            </svg>\n        </Button>\n\n        if (navigator.share) {\n            sharedButton = <Button clicked={this.share} className=\"air__button air__button--naked air__button--ghost air__station-button air__station-button-share\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    className=\"air__station-button-icon\">\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    <path fill=\"white\"\n                        d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z\" />\n                </svg>\n            </Button>\n        }\n\n        let popOriginStyle = {\n            transformOrigin: x + \" \" + y\n        }\n\n        let moodStyle = {\n            fill: this.props.station.components.PM10.update ? this.props.station.moodRGBA : \"rgba(70,70,70,0.75)\"\n        }\n\n        let transStyle = {\n            /* display: \"flex\",\n            justifyContent: \"center\",\n            width: \"100%\",\n            position: \"relative\" */\n        }\n\n        element = (\n            <CSSTransitionGroup\n                style={transStyle}\n                transitionName=\"a-station\"\n                transitionAppear={true}\n                transitionAppearTimeout={300}\n                transitionEnter={false}\n                transitionLeave={true}\n                transitionLeaveTimeout={300}>\n                <div className=\"air__station\" style={{ ...popOriginStyle }}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\"\n                        style={{ ...moodStyle }}\n                        className=\"air__station-background\"\n                        viewBox=\"0 0 600 600\"\n                        filter=\"drop-shadow(rgba(0,0,0,.5) 10px 10px 20px)\">\n                        <path d={this.state.shape}>\n                            <animate id=\"animation-to-circle\"\n                                begin=\"animation-to-hexagon.end\"\n                                restart=\"always\"\n                                fill=\"freeze\"\n                                attributeName=\"d\"\n                                dur=\"200ms\"\n                                to={circle} />\n                            <animate id=\"animation-to-hexagon\"\n                                begin=\"animation-to-circle.end\"\n                                restart=\"always\"\n                                fill=\"freeze\"\n                                attributeName=\"d\"\n                                dur=\"200ms\"\n                                to={hexagon} />\n                        </path>\n                    </svg>\n\n                    <h1 className=\"air__station-header\">{name}</h1>\n                    {dateElement}\n                    {this.state.comps}\n                    {this.state.compass}\n                    <div className=\"air__action-container\">\n                        {button}\n                        {sharedButton}\n                    </div>\n                </div>\n            </CSSTransitionGroup>\n        )\n\n        return element;\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        stations: state.stations,\n        station: getStationByID(\n            state.stations,\n            ownProps.match.params.id\n        ),\n        update: state.update,\n        favorizedStations: state.favorizedStations\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFavorizeStation: (id) => dispatch(favorizeStation(id)),\n        onUnfavorizeStation: (id) => dispatch(unfavorizeStation(id))\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Station));","// feature name\nexport const STATIONS = '[Stations]';\nexport const STATION = '[Station]';\n\n// action types\nexport const FETCH_STATIONS = `${STATIONS} FETCH`;\nexport const SET_STATIONS = `${STATIONS} SET`;\nexport const ADD_STATION = `${STATION} ADD`;\nexport const ADD_STATIONS = `${STATIONS} ADD`;\nexport const UPDATE_STATIONS = `${STATIONS} UPDATE`;\nexport const UPDATE_STATION = `${STATION} UPDATE`;\nexport const FAVORIZE_STATION = `${STATIONS} FAVORIZE`;\nexport const UNFAVORIZE_STATION = `${STATIONS} UNFAVORIZE`;\n\n// action creators\nexport const fetchStations = (url, provider, method) => ({\n    type: FETCH_STATIONS + \" \" + method,\n    payload: url,\n    meta: { feature: STATIONS, provider: provider, method: method }\n});\n\nexport const setStations = ({ stations, provider }) => ({\n    type: SET_STATIONS,\n    payload: stations,\n    meta: { feature: STATIONS, provider: provider }\n});\n\nexport const addStations = ({ stations, provider }) => ({\n    type: ADD_STATIONS,\n    payload: stations,\n    meta: { feature: STATIONS, provider: provider }\n});\n\nexport const updateStations = ({ stations, provider }) => ({\n    type: UPDATE_STATIONS,\n    payload: stations,\n    meta: { feature: STATIONS, provider: provider }\n});\n\nexport const addStation = ({ station, provider }) => ({\n    type: ADD_STATION,\n    payload: station,\n    meta: { feature: STATIONS, provider: provider }\n});\n\nexport const updateStation = ({ station, provider }) => ({\n    type: UPDATE_STATION,\n    payload: station,\n    meta: { feature: STATIONS, provider: provider }\n});\n\nexport const favorizeStation = (id) => ({\n    type: FAVORIZE_STATION,\n    payload: id,\n    meta: { feature: STATIONS }\n});\n\nexport const unfavorizeStation = (id) => ({\n    type: UNFAVORIZE_STATION,\n    payload: id,\n    meta: { feature: STATIONS }\n});","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\n\nimport L from 'leaflet';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\n\nimport './Stations.css';\n\nclass Stations extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hasLocation: false,\n            location: {\n                lat: 48.323368,\n                lng: 14.298756,\n            },\n            center: {\n                lat: 48.323368,\n                lng: 14.298756,\n            },\n            zoom: 13,\n            myStations: [],\n        }\n    }\n\n    componentDidMount() {\n        this.getStations();\n        this.getLocation();\n    }\n\n    componentDidUpdate(prevProps) {\n        this.props.stations.forEach((station) => {\n            if (this.props.stations.length && this.props.stations.length > prevProps.stations.length) {\n                this.getStations();\n            }\n        });\n\n\n        if (this.props.update.timestamp > prevProps.update.timestamp) {\n            this.updateStations();\n            // this.getStations();\n        }\n    }\n\n    // forward to the official station when clicking on the corresponding placeholder on the map\n    handleClickCircle = (provider, station) => (e) => {\n        this.props.history.push({\n            pathname: \"/station/\" + provider + \"/\" + station,\n            state: {\n                x: e.originalEvent.clientX,\n                y: e.originalEvent.clientY\n            }\n        });\n    }\n\n    // go back to the main route\n    handleClickMap = () => {\n        this.props.history.push(\"/\");\n    }\n\n    handleLocationFound = e => {\n        this.setState({\n            hasLocation: true,\n            location: e.latlng,\n            center: e.latlng\n        })\n\n        // console.log(this.refs.map.leafletElement);\n    }\n\n    getLocation = () => {\n        this.refs.map.leafletElement.locate();\n    }\n\n    getStations = () => {\n        let myStations = this.props.stations.map(element => {\n            let marker = \"\";\n\n            if (element.provider === \"luftdaten\") {\n                marker = L.divIcon({\n                    html: `<svg xmlns=\"http://www.w3.org/2000/svg\" \n                        class=\"\" viewBox=\"0 0 600 600\"\n                        data-marker-id=\"${element.id}\"\n                        style=\"fill: ${element.components.PM10.update ? element.moodRGBA : \"rgba(70,70,70,0.75)\"}\">\n                        <path d=\"M41.1,165.29V434.71a25.57,25.57,0,0,0,12.78,22.15L287.21,591.57a25.58,25.58,0,0,0,25.58,0L546.12,456.86a25.57,25.57,0,0,0,12.78-22.15V165.29a25.57,25.57,0,0,0-12.78-22.15L312.79,8.43a25.58,25.58,0,0,0-25.58,0L53.88,143.14A25.57,25.57,0,0,0,41.1,165.29Z\"/>\n                        </svg>`,\n                    className: \"air__stations-luftdaten-marker\",\n                    iconSize: [40, 40],\n                    iconAnchor: [20, 40],\n                });\n            }\n\n            if (element.provider === \"upperaustria\") {\n                marker = L.divIcon({\n                    html: `<svg xmlns=\"http://www.w3.org/2000/svg\" \n                        class=\"\" viewBox=\"0 0 600 600\"\n                        data-marker-id=\"${element.id}\"\n                        style=\"fill: ${element.components.PM10.update ? element.moodRGBA : \"rgba(70,70,70,0.75)\"}\">\n                        <path d=\"M5,300H5A295,295,0,0,0,152.5,555.48h0a295,295,0,0,0,295,0h0A295,295,0,0,0,595,300h0A295,295,0,0,0,447.5,44.52h0a295,295,0,0,0-295,0h0A295,295,0,0,0,5,300Z\"/>\n                        </svg>`,\n                    className: \"air__stations-upperaustria-marker-wrapper\",\n                    iconSize: [40, 40],\n                    iconAnchor: [20, 40],\n                });\n            }\n\n            return (\n                <Marker\n                    key={element.id}\n                    icon={marker}\n                    onClick={this.handleClickCircle(element.provider, element.id)}\n                    bubblingMouseEvents={false}\n                    position={[element.longitude, element.latitude]}\n                    title={element.name}\n                    stroke={false}\n                    fillOpacity={1}></Marker>\n            )\n        });\n\n        this.setState({ myStations: myStations });\n    }\n\n    updateStations = () => {\n        this.state.myStations.forEach(station => {\n            this.props.stations.forEach(newStation => {\n                if (station.key === newStation.id ) {\n                    let markerID = '[data-marker-id=\"' + newStation.id + '\"]';\n                    let marker = document.querySelector(markerID);\n                    marker.setAttribute(\"style\", 'fill: ' + (newStation.components.PM10.update ? newStation.moodRGBA : \"rgba(70,70,70,0.75)\"));\n                }\n            })\n        })\n    }\n\n    render() {\n        const location = this.state.hasLocation ? (\n            <Marker position={this.state.location}></Marker>\n        ) : null;\n\n        return (\n            <Map className=\"air__stations\"\n                onClick={this.handleClickMap}\n                onMovestart={this.handleClickMap}\n                center={this.state.center}\n                zoom={this.state.zoom}\n                maxZoom={16}\n                // preferCanvas=\"true\"\n                doubleClickZoom=\"false\"\n                // onLocationfound={this.handleLocationFound}\n                ref=\"map\">\n                <TileLayer\n                    // https://wiki.openstreetmap.org/wiki/Tile_servers\n                    // https://leaflet-extras.github.io/leaflet-providers/preview/\n                    attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n                    // url=\"https://{s}.tile.openstreetmap.se/hydda/full/{z}/{x}/{y}.png\"\n                    url = \"https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png\"\n                />\n                {location}\n                {this.state.myStations}\n            </Map>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        stations: state.stations,\n        update: state.update\n    };\n}\n\nexport default withRouter(connect(mapStateToProps)(Stations));","import React, { Component } from 'react';\n\nimport './Aircomp.css';\n\nclass Aircomp extends Component {\n\n    render() {\n        let element = null;\n        let windforce = 0;\n        let winddirection = 0;\n\n        switch (this.props.component) {\n            case \"NO2\":\n            case \"PM10\":\n            case \"PM25\":\n                let classes = \"air__comp air__comp--dust air__comp--dust-\" + this.props.component;\n\n                if(this.props.value > 0) {\n                    element = (\n                        <div className={classes}>\n                            <div className=\"air__comp-title\">{this.props.component}:</div>\n                            <div className=\"air__comp-value\">{this.props.value === 0 ? \"-\" : this.props.value}<span className=\"air__comp-unit\">&nbsp;{this.props.unit}</span></div>\n                        </div>\n                    )\n                }\n\n                break;\n\n            case \"WIR\":\n                winddirection = this.props.value || 0;\n\n                const divStyle = {\n                    transform: 'rotate(' + (winddirection - 180) + 'deg)'\n                };\n\n                element = (\n                    <div className=\"air__comp-wind-direction\" style={divStyle}>\n                        <svg className=\"air__comp-wind-direction-svg\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 600 600\">\n                            <path d=\"M289.3 103.1L98.7 484.2c-5.2 10.3 5.8 21.3 16.1 16.1l179.8-89.9c3.4-1.7 7.4-1.7 10.7 0l179.8 89.9c10.3 5.2 21.3-5.8 16.1-16.1L310.7 103.1c-4.4-8.9-17-8.9-21.4 0zm4.1 276.4l-117.2 58.6c-10.3 5.2-21.3-5.8-16.1-16.1l117.2-234.3c5.7-11.3 22.7-7.3 22.7 5.4v175.8c0 4.4-2.6 8.6-6.6 10.6z\" fill=\"#fff\" />\n                            <style xmlns=\"\" /></svg>\n                    </div>\n                )\n\n                break;\n\n            case \"WIV\":\n                windforce = this.props.value || 0;\n\n                element = (\n                    <div className=\"air__comp-wind-force\">{windforce.toFixed(1)} km/h</div>\n                )\n\n                break;\n\n            case \"TEMP\":\n                element = (\n                    <div\n                        className=\"air__comp air__comp--temp\"\n                        style={{\n                            fontSize: this.props.unit === 'Grad' ? '11px' : 'inherit'\n                        }}>\n                        <div className=\"air__comp-value\">{this.props.value.toFixed(1) || 0.0}</div>\n                        <div className=\"air__comp-unit\">&nbsp;°C</div>\n                    </div>\n                )\n                break;\n\n            default:\n                break;\n        }\n\n        return element;\n    }\n}\n\nexport default Aircomp;","import React, { Component } from 'react';\n\nimport './Compass.css';\n\nclass Compass extends Component {\n    state = {\n        orientation: 0,\n        available: false,\n        platform: navigator.platform\n    }\n\n    componentDidMount() {\n        if (window.DeviceOrientationEvent) {\n            window.addEventListener('deviceorientation', this.deviceOrientationHandler.bind(this), false);\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('deviceorientation', this.deviceOrientationHandler.bind(this));\n    }\n\n    deviceOrientationHandler(event) {\n        if (event.webkitCompassHeading && this.state.platform === \"iPhone\") {\n            this.setState({ available: true });\n            this.setState({ orientation: event.webkitCompassHeading.toFixed(0) });\n        }\n    }\n\n    render() {\n        let windFrom = 0;\n        let grid = 0;\n        let winddirection = 0;\n\n        winddirection = this.props.value || 0;\n\n        windFrom = parseFloat(this.state.orientation) - parseFloat(winddirection);\n        windFrom = -windFrom;\n\n        grid = -this.state.orientation;\n\n        let windStyle = {\n            transform: 'rotate(' + windFrom + 'deg)'\n        };\n\n        let gridStyle = {\n            transform: 'rotate(' + grid + 'deg)'\n        };\n\n        let legendStyle = {\n            transform: 'rotate(' + (this.state.orientation) + 'deg)'\n        };\n\n        let lineStyle0 = {\n            transform: 'rotate(' + (-this.state.orientation) + 'deg)'\n        };\n\n        let lineStyle90 = {\n            transform: 'rotate(' + (-this.state.orientation + 90) + 'deg)'\n        };\n\n        let element = null;\n\n        if (this.state.available) {\n            element = <div className=\"air__compass\">\n                <div style={windStyle} className=\"air__compass-wind\">\n                    <svg\n                        // style={windSVGStyle}\n                        className=\"air__compass-wind-svg\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        version=\"1.1\"\n                        id=\"Layer_1\"\n                        x=\"0px\" y=\"0px\"\n                        width=\"24px\" height=\"24px\"\n                        viewBox=\"0 0 512 512\">\n                        <path fill={this.props.moodRGBA} d=\"M348.219,256l92.219,184.438L71.563,256 M512,0L0,256l512,256L384,256L512,0L512,0z\" />\n                    </svg>\n                </div>\n                <div style={gridStyle} className=\"air__compass-grid\">\n                    <div style={legendStyle} className=\"air__compass-grid-n\">\n                        <div className=\"air__compass-grid-n-text\">N</div>\n                        <div style={lineStyle0} className=\"air__compass-grid-n-line\"></div>\n                    </div>\n                    <div style={legendStyle} className=\"air__compass-grid-o\">\n                        <div className=\"air__compass-grid-o-text\">O</div>\n                        <div style={lineStyle90} className=\"air__compass-grid-o-line\"></div>\n                    </div>\n                    <div style={legendStyle} className=\"air__compass-grid-s\">\n                        <div className=\"air__compass-grid-s-text\">S</div>\n                        <div style={lineStyle0} className=\"air__compass-grid-s-line\"></div>\n                    </div>\n                    <div style={legendStyle} className=\"air__compass-grid-w\">\n                        <div className=\"air__compass-grid-w-text\">W</div>\n                        <div style={lineStyle90} className=\"air__compass-grid-w-line\"></div>\n                    </div>\n                </div>\n            </div>;\n        }\n\n        //  window.requestAnimationFrame(deviceOrientationHandler);\n\n        return element;\n    }\n}\n\nexport default Compass;","import React from 'react';\n\nimport './Button.css';\n\nconst button = (props) => (\n    <button className={props.className} onClick={props.clicked}>\n        {props.children}\n    </button>\n);\n\nexport default button;","export const getStationByID = (stations, id) => {\n    return stations.filter(stations => stations.id === id)[0];\n}","// action types\nexport const SET_NOTIFICATION = 'SET_NOTIFICATION';\nexport const REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION';\n\n// action creators\nexport const setNotification = ({ message, feature }) => ({\n    type: `${feature} ${SET_NOTIFICATION}`,\n    payload: message,\n    meta: { feature }\n});\n\nexport const removeNotification = ({ notificationId, feature }) => ({\n    type: `${feature} ${REMOVE_NOTIFICATION}`,\n    payload: notificationId,\n    meta: { feature }\n});","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { removeNotification } from \"../../redux/actions/notifications\";\nimport \"./Notifications.css\";\n\nclass Notifications extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      notification: null\n    }\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(this.setNotification, 3000);\n    \n    this.setState({\n      notification: this.props.notifications[0].message\n    })\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  setNotification = () => {\n\n    if (this.props.notifications.length > 1) {\n      this.props.onRemoveNotification(this.props.notifications[0].id);\n      \n      this.setState({\n        notification: this.props.notifications[0].message\n      })\n    }\n    else if (this.props.notifications.length === 1) {\n      this.setState({\n        notification: this.props.notifications[0].message\n      }, () => {\n        this.props.onRemoveNotification(this.props.notifications[0].id);\n      })\n    }\n  }\n\n  render() {\n    return (\n      <ul className=\"Notifications\">{this.state.notification}</ul>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    notifications: state.notifications\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onRemoveNotification: (id) => dispatch(removeNotification({ notificationId: id, feature: \"[Notifications]\" }))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications);","import React from 'react';\n\nimport './Legend.css';\n\nconst legend = (props) => (\n    <div className=\"air__legend\" >\n        <div className=\"air__legend-scale\">\n            <div className=\"air__legend-scale-stop air__legend-scale-stop--0\">0 µg/m³</div>\n            <div className=\"air__legend-scale-stop air__legend-scale-stop--1\">25</div>\n            <div className=\"air__legend-scale-stop air__legend-scale-stop--2 air__legend-scale--limit\">\n                <div className=\"air__legend-scale--limit-text\">50<br/>PM10</div>\n            </div>\n            <div className=\"air__legend-scale-stop air__legend-scale-stop--3\">75</div>\n            <div className=\"air__legend-scale-stop air__legend-scale-stop--4\">100</div>\n            <div className=\"air__legend-scale-stop air__legend-scale-stop--5\">500</div>\n        </div>\n    </div>\n);\n\nexport default legend;","import React, { Component } from 'react';\n\nimport \"./Updatebar.css\";\n\nexport default class UpdateBar extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        // counter: 0,\n        progress: 0\n      }\n    }\n  \n    componentDidMount() {\n      this.animate();\n    }\n  \n    componentWillUnmount() {\n      cancelAnimationFrame(this.rafId);\n    }\n  \n    animate() {\n      // if (this.props.animate) {\n        let start = null;\n        let step = timestamp => {\n          if (!start) start = timestamp;\n          \n          let progress = timestamp - start;\n          this.setState({ progress });\n  \n          if (progress > this.props.interval) {\n            this.props.update();\n            start = null;\n          }\n  \n          this.rafId = requestAnimationFrame(step);\n        };\n        this.rafId = requestAnimationFrame(step);\n      // }\n    }\n  \n    render() {\n      let style = { transform: `scaleX(${(this.state.progress / this.props.interval)})` };\n  \n      return <div style={style} className=\"air__update-bar\"></div>\n    }\n  }","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { Route } from 'react-router-dom';\nimport PageVisibility from 'react-page-visibility';\nimport { CSSTransitionGroup } from 'react-transition-group';\n\nimport { fetchStations } from \"../../redux/actions/stations\";\nimport { clearState } from '../../redux/localStorage';\n\n// import Stations from \"../../components/dashboard/Stations/Stations\";\nimport Stations from '../../components/Stations/Stations';\nimport Station from '../../components/Station/Station';\nimport Notifications from \"../../ui/Notifications/Notifications\";\nimport Button from \"../../components/UI/Button/Button\";\nimport Legend from '../../components/UI/Legend/Legend';\nimport Updatebar from \"../../ui/Updatebar/Updatebar\";\nimport './App.css';\n\nconst luftdatenURL = \"https://api.luftdaten.info/v1/filter/type=SDS011&area=48.323368,14.298756,10\";\nconst luftdatenProvider = \"luftdaten\";\nconst upperAustriaURL = \"https://www2.land-oberoesterreich.gv.at/imm/jaxrs/messwerte/json?\";\nconst upperAustriaProvider = \"upperaustria\";\n\nclass Updating extends Component {\n  render() {\n    return <div className=\"air__updating\">Updating ...</div>\n  }\n}\n\nclass Loading extends Component {\n  render() {\n    return <div className=\"air__loading\">Fetching ...</div>\n  }\n}\n\nclass App extends Component {\n  componentDidMount() {\n    if (!this.props.stations.length) {\n      this.onFetchStations();\n    }\n    else {\n      this.onUpdateStations();\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearTimeout(this.timeoutID);\n  }\n\n  clearStorage() {\n    clearState();\n\n    this.timeoutID = window.setTimeout(window.location.reload(true), 1000);\n  }\n\n  onFetchStations = () => {\n    this.props.onFetchStations(luftdatenURL, luftdatenProvider, \"FETCH\");\n    this.props.onFetchStations(upperAustriaURL, upperAustriaProvider, \"FETCH\");\n  }\n\n  onUpdateStations = () => {\n    this.props.onFetchStations(luftdatenURL, luftdatenProvider, \"UPDATE\");\n    this.props.onFetchStations(upperAustriaURL, upperAustriaProvider, \"UPDATE\");\n  }\n\n  handleVisibilityChange = isVisible => {\n    this.onUpdateStations();\n  }\n\n  render() {\n    let stations = null;\n    let station = null;\n    let loading = null;\n    let updating = null;\n    let notifications = null;\n    let updateBar = null;\n\n    stations = <Stations />\n\n    station = <Route\n      path=\"/station/:provider/:id\"\n      render={() => <Station />} />\n\n    if (this.props.loading) {\n      loading = <Loading />\n    }\n\n    if (this.props.updating) {\n      updating = <Updating />\n    }\n\n    if (this.props.options.autoupdating) {\n      updateBar = <Updatebar interval={60 * 3 * 1000} update={this.onUpdateStations} />\n    }\n\n    if (this.props.notifications.length) {\n      notifications = <Notifications notifications={this.props.notifications} />\n    }\n\n    if (this.props) {\n      stations = <Stations stations={this.props.stations} options={this.props.options} />;\n    }\n\n    return (\n      <PageVisibility onChange={this.handleVisibilityChange}>\n        <div className=\"air\">\n          <div className=\"air__background\">\n            <svg className=\"air__background-svg\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 600 600\">\n              <path d=\"M289.3 103.1L98.7 484.2c-5.2 10.3 5.8 21.3 16.1 16.1l179.8-89.9c3.4-1.7 7.4-1.7 10.7 0l179.8 89.9c10.3 5.2 21.3-5.8 16.1-16.1L310.7 103.1c-4.4-8.9-17-8.9-21.4 0zm4.1 276.4l-117.2 58.6c-10.3 5.2-21.3-5.8-16.1-16.1l117.2-234.3c5.7-11.3 22.7-7.3 22.7 5.4v175.8c0 4.4-2.6 8.6-6.6 10.6z\" fill=\"#fff\" /></svg>\n          </div>\n\n          <CSSTransitionGroup\n            transitionName=\"air__animation-fade\"\n            transitionAppear={true}\n            transitionAppearTimeout={300}\n            transitionEnter={false}\n            transitionLeave={true}\n            transitionLeaveTimeout={300}>\n\n            {station}\n            {stations}\n\n            <div className=\"air__button-group\">\n              <Button\n                className=\"air__button air__button--naked\"\n                clicked={() => this.onFetchStations()}>\n                FETCH\n            </Button>\n              <Button\n                className=\"air__button air__button--naked\"\n                clicked={() => this.onUpdateStations()}>\n                UPDATE\n            </Button>\n              <Button\n                className=\"air__button air__button--naked\"\n                clicked={() => this.clearStorage()}>\n                CLEAR\n            </Button>\n            </ div>\n            <Legend />\n            {updateBar}\n          </ CSSTransitionGroup>\n          <CSSTransitionGroup\n            transitionName=\"air__animation-fade-crunchy\"\n            transitionAppear={true}\n            transitionAppearTimeout={150}\n            transitionEnter={false}\n            transitionLeave={true}\n            transitionLeaveTimeout={150}>\n            {loading}\n            {updating}\n            {notifications}\n          </ CSSTransitionGroup>\n        </div>\n      </PageVisibility>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.ui.loading,\n    updating: state.ui.updating,\n    notifications: state.notifications,\n    update: state.update,\n    stations: state.stations,\n    options: state.options\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchStations: (url, luftdatenProvider, method) => dispatch(fetchStations(url, luftdatenProvider, method))\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","export const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState);\n    }\n    catch (err) {\n        // log it later\n    }\n};\n\nexport const clearState = () => {\n    try {\n        localStorage.clear();\n    }\n    catch (err) {\n        // log it later\n    }\n};","import { SET_STATIONS, ADD_STATION, UPDATE_STATION, FAVORIZE_STATION, UNFAVORIZE_STATION } from \"../actions/stations\";\n\nconst initState = [];\n\nexport const stationsReducer = (stations = initState, action) => {\n    switch (action.type) {\n\n        case SET_STATIONS:\n            return action.payload;\n\n        case ADD_STATION:\n            return [...stations, action.payload];\n\n        case UPDATE_STATION:\n            return stations.map((station) => {\n                if (station.id === action.payload.id) {\n                    return {\n                        ...station, \n                        date: action.payload.date,\n                        mood: action.payload.mood,\n                        moodRGBA: action.payload.moodRGBA,\n                        name: action.payload.name !== null ? action.payload.name : station.name,\n                        components: {\n                            ...station.components,\n                            ...action.payload.components\n                        }\n                    }\n                }\n        \n                // This isn't the item we care about - keep it as-is\n                return station;        \n            });\n        \n        case FAVORIZE_STATION:\n            return stations.map((station) => {\n                if (station.id === action.payload) {\n                    return {\n                        ...station,\n                        favorized: true\n                    }\n                }\n        \n                return station;        \n            });\n        \n        case UNFAVORIZE_STATION:\n            return stations.map((station) => {\n                if (station.id === action.payload) {\n                    return {\n                        ...station, \n                        favorized: false,\n                    }\n                }\n        \n                return station;        \n            });\n\n        default:\n            return stations;\n    }\n}","// action types\nexport const API_REQUEST = 'API_REQUEST';\nexport const API_SUCCESS = 'API_SUCCESS';\nexport const API_ERROR = 'API_ERROR';\n\n// action creators\nexport const apiRequest = ({ body, method, url, feature, provider, update }) => ({\n    type: `${feature} ${API_REQUEST} ${update}`,\n    payload: body,\n    meta: { method, url, feature, provider, update }\n});\n\nexport const apiSuccess = ({ response, feature, provider, update }) => ({\n    type: `${feature} ${API_SUCCESS} ${update}`,\n    payload: response,\n    meta: { feature, provider, update }\n});\n\nexport const apiError = ({ error, feature, provider }) => ({\n    type: `${feature} ${API_ERROR}`,\n    payload: error,\n    meta: { feature, provider }\n});","// action types\nexport const SET_LOADER = 'SET_LOADER';\nexport const SET_UPDATER = 'SET_UPDATER';\n\n// action creators\nexport const setLoader = ({ state, feature }) => ({\n    type: `${feature} ${SET_LOADER}`,\n    payload: state,\n    meta: { feature }\n});\n\nexport const setUpdater = ({ state, feature }) => ({\n    type: `${feature} ${SET_UPDATER}`,\n    payload: state,\n    meta: { feature }\n});","import { STATIONS, FETCH_STATIONS, ADD_STATION, UPDATE_STATIONS, addStations, updateStations } from \"../actions/stations\";\nimport { setUpdate } from \"../actions/update\";\nimport { API_ERROR, API_SUCCESS, apiRequest } from \"../actions/api\";\nimport { setLoader, setUpdater } from \"../actions/ui\";\nimport { setNotification } from \"../actions/notifications\";\nimport getErrorMessage from \"../../utilities/getErrorMessage\";\n\nexport const stationsMiddleware = () => (next) => (action) => {\n    next(action);\n\n    switch (action.type) {\n\n        case FETCH_STATIONS + \" FETCH\":\n            next([\n                apiRequest({ body: null, method: 'GET', url: action.payload, feature: STATIONS, provider: action.meta.provider, update: action.meta.method }),\n                setLoader({ state: true, feature: STATIONS })\n            ]);\n            break;\n        \n        case FETCH_STATIONS + \" UPDATE\":\n            next([\n                apiRequest({ body: null, method: 'GET', url: action.payload, feature: STATIONS, provider: action.meta.provider, update: action.meta.method }),\n                setUpdater({ state: true, feature: STATIONS })\n            ]);\n            break;\n        \n        case UPDATE_STATIONS  + \" \" + action.meta.method:\n            next([\n                apiRequest({ body: null, method: 'GET', url: action.payload, feature: STATIONS, provider: action.meta.provider, update: action.meta.method }),\n                setUpdater({ state: true, feature: STATIONS })\n            ]);\n            break;\n        \n        case ADD_STATION:\n            next([\n                // setNotification({ message: action.payload.id, feature: STATIONS }),  \n            ]);\n            break;\n\n        case `${STATIONS} ${API_SUCCESS} FETCH`:\n            next([\n                addStations({ stations: action.payload, provider: action.meta.provider }),\n                setLoader({ state: false, feature: STATIONS })\n            ]);\n            break;\n        \n        case `${STATIONS} ${API_SUCCESS} UPDATE`:\n            next([\n                updateStations({ stations: action.payload, provider: action.meta.provider }),\n                setUpdater({ state: false, feature: STATIONS }),\n                setUpdate({ update: Date.now() })\n            ]);\n            break;\n\n        case `${STATIONS} ${API_ERROR}`:\n            next([\n                setNotification({ message: getErrorMessage(action.payload.status, action.meta.provider), feature: STATIONS }),\n                setLoader({ state: false, feature: STATIONS }),\n                setUpdater({ state: false, feature: STATIONS })\n            ]);\n            break;\n        \n        default:\n            break;\n    }\n};","// action types\nexport const SET_UPDATE = 'SET_UPDATE';\n\n// action creators\nexport const setUpdate = ({ update }) => ({\n    type: `${SET_UPDATE}`,\n    payload: update\n});","export default function getErrorMessage(status, provider) {\n    let message = \"Oh Nein! \";\n\n    switch (provider) {\n        case \"luftdaten\":\n            message += \"Luftdaten\"\n            break;\n        case \"upperaustria\":\n            message += \"Oberösterreich\"\n            break;\n        default:\n            break;\n    }\n\n    switch (status) {\n        case 400:\n        case 403:\n        case 404:\n        case 405:\n            message += \" ist leider gerade nicht erreichbar!\"\n            break;\n        default:\n            message += \" ist leider gerade nicht erreichbar!\";\n            break;\n    }\n\n    return message\n}","export default class GetDateFromTo {\n    constructor() {\n        this.dateFrom = new Date();\n        this.dateTo = new Date();\n\n        // Summertime\n        // this.dateFrom.setHours(this.dateFrom.getHours() - 1);\n        // this.dateTo.setHours(this.dateTo.getHours() - 1);\n\n        // Wintertime\n        this.dateFrom.setHours(this.dateFrom.getHours());\n        this.dateTo.setHours(this.dateTo.getHours());\n\n        if (this.dateFrom.getMinutes() > 10 && this.dateFrom.getMinutes() < 40) {\n            this.dateFrom.setMinutes(0);\n            this.dateTo.setMinutes(10);\n        }\n\n        else if (this.dateFrom.getMinutes() > 40 && this.dateFrom.getMinutes() <= 60) {\n            this.dateFrom.setMinutes(30);\n            this.dateTo.setMinutes(40);\n        }\n\n        else if (this.dateFrom.getMinutes() >= 0 || this.dateFrom.getMinutes() <= 10) {\n            this.dateFrom.setHours(this.dateFrom.getHours() - 1);\n            this.dateTo.setHours(this.dateTo.getHours() - 1);\n            this.dateFrom.setMinutes(30);\n            this.dateTo.setMinutes(40);\n        }\n    }\n\n    stringDateFrom() {\n        return this.dateFrom.getFullYear() + \"-\" + ((this.dateFrom.getMonth() + 1) < 10 ? \"0\" + (this.dateFrom.getMonth() + 1) : (this.dateFrom.getMonth() + 1)) + \"-\" + (this.dateFrom.getDate() < 10 ? \"0\" + this.dateFrom.getDate() : this.dateFrom.getDate()) + \" \" + (this.dateFrom.getHours() < 10 ? \"0\" + this.dateFrom.getHours() : this.dateFrom.getHours()) + \":\" + (this.dateFrom.getMinutes() < 10 ? \"0\" + this.dateFrom.getMinutes() : this.dateFrom.getMinutes());\n    }\n\n    stringDateTo() {\n        return this.dateTo.getFullYear() + \"-\" + ((this.dateTo.getMonth() + 1) < 10 ? \"0\" + (this.dateTo.getMonth() + 1) : (this.dateTo.getMonth() + 1)) + \"-\" + (this.dateTo.getDate() < 10 ? \"0\" + this.dateTo.getDate() : this.dateTo.getDate()) + \" \" + (this.dateTo.getHours() < 10 ? \"0\" + this.dateTo.getHours() : this.dateTo.getHours()) + \":\" + (this.dateTo.getMinutes() < 10 ? \"0\" + this.dateTo.getMinutes() : this.dateTo.getMinutes());\n    }\n}","import { API_REQUEST, apiError, apiSuccess } from \"../actions/api\";\nimport getUpperAustriaURL from \"../../utilities/getUpperAustriaURL\";\n\nexport const apiMiddleware = ({ dispatch }) => (next) => (action) => {\n    next(action);\n\n    if (action.type.includes(API_REQUEST) && action.meta.provider === \"luftdaten\") {\n        const { body, url, method, feature, provider, update } = action.meta;\n\n        fetch(url, { body, method })\n            .then(handleResponse)\n            .then(response => dispatch(apiSuccess({ response, feature, provider, update })))\n            .catch(error => dispatch(apiError({ error: error, feature, provider })))\n    }\n\n    if (action.type.includes(API_REQUEST) && action.meta.provider === \"upperaustria\") {\n        const { body, method, feature, provider, update } = action.meta;\n\n        let url = getUpperAustriaURL(action.meta.url);\n\n        fetch(url, { body, method })\n            .then(handleResponse)\n            .then(response => dispatch(apiSuccess({ response, feature, provider, update })))\n            .catch(error => dispatch(apiError({ error: error, feature, provider })))\n    }\n};\n\nfunction handleResponse (response) {\n    let contentType = response.headers.get('content-type')\n    if (contentType.includes('application/json')) {\n      return handleJSONResponse(response)\n    } else if (contentType.includes('text/html')) {\n      return handleTextResponse(response)\n    } else {\n      // Other response types as necessary. I haven't found a need for them yet though.\n      throw new Error(`Sorry, content-type ${contentType} not supported`)\n    }\n  }\n  \n  function handleJSONResponse (response) {\n    return response.json()\n      .then(json => {\n        if (response.ok) {\n          return json\n        } else {\n          return Promise.reject(Object.assign({}, json, {\n            status: response.status,\n            statusText: response.statusText\n          }))\n        }\n      })\n  }\n\n  function handleTextResponse (response) {\n    return response.text()\n      .then(text => {\n        if (response.ok) {\n          return text\n        } else {\n          return Promise.reject({\n            status: response.status,\n            statusText: response.statusText,\n            err: text\n          })\n        }\n      })\n  }","import GetDateFromTo from './GetDateFromTo';\n\nexport default function getUpperAustriaURL(url) {\n    let stringDateFrom = \"\";\n    let stringDateTo = \"\";\n\n    const getDateFromTo = new GetDateFromTo();\n\n    stringDateFrom = getDateFromTo.stringDateFrom();\n    stringDateTo = getDateFromTo.stringDateTo();\n\n    url = url + \"datvon=\" + stringDateFrom + \"&datbis=\" + stringDateTo;\n\n    return url;\n}","import { SET_LOADER } from \"../actions/ui\";\nimport { SET_UPDATER } from \"../actions/ui\";\n\nconst initState = {\n    loading: false,\n    updating: false\n};\n\nexport const uiReducer = (ui = initState, action) => {\n    switch (true) {\n\n        case action.type.includes(SET_LOADER):\n            return { ...ui, loading: action.payload };\n        \n        case action.type.includes(SET_UPDATER):\n            return { ...ui, updating: action.payload };\n\n        default:\n            return ui;\n    }\n};","import { SET_UPDATE } from \"../actions/update\";\n\nconst initState = {\n    timestamp: Date.now()\n};\n\nexport const updateReducer = (update = initState, action) => {\n    switch (action.type) {\n        case SET_UPDATE:\n            return { ...update, timestamp: action.payload };\n\n        default:\n            return update;\n    }\n};","import { SET_OPTION_REVERSEGEO, SET_OPTION_AUTOUPDATING, SET_OPTION_RUNAWAYS, SET_OPTION_SORT } from \"../actions/options\";\n\nconst initState = {\n    reversegeo: true,\n    autoupdating: true,\n    runaways: false,\n    sort: true\n};\n\nexport const optionsReducer = (options = initState, action) => {\n    switch (true) {\n\n        case action.type.includes(SET_OPTION_REVERSEGEO):\n            return { ...options, reversegeo: action.payload };\n        \n        case action.type.includes(SET_OPTION_AUTOUPDATING):\n            return { ...options, autoupdating: action.payload };\n        \n        case action.type.includes(SET_OPTION_RUNAWAYS):\n            return { ...options, runaways: action.payload };\n\n        case action.type.includes(SET_OPTION_SORT):\n            return { ...options, sort: action.payload };\n\n        default:\n            return options;\n    }\n};","// action types\nexport const SET_OPTION_REVERSEGEO = 'SET_OPTION_REVERSEGEO';\nexport const SET_OPTION_AUTOUPDATING = 'SET_OPTION_AUTOUPDATING';\nexport const SET_OPTION_RUNAWAYS = 'SET_OPTION_RUNAWAYS';\nexport const SET_OPTION_SORT = 'SET_OPTION_SORT';\n\n// action creators\nexport const setOptionReverseGeo = ({ state, feature }) => ({\n    type: `${feature} ${SET_OPTION_REVERSEGEO}`,\n    payload: state,\n    meta: { feature }\n});\n\nexport const setOptionAutoupdater = ({ state, feature }) => ({\n    type: `${feature} ${SET_OPTION_AUTOUPDATING}`,\n    payload: state,\n    meta: { feature }\n});\n\nexport const setOptionRunaways = ({ state, feature }) => ({\n    type: `${feature} ${SET_OPTION_RUNAWAYS}`,\n    payload: state,\n    meta: { feature }\n});\n\nexport const setOptionSort = ({ state, feature }) => ({\n    type: `${feature} ${SET_OPTION_SORT}`,\n    payload: state,\n    meta: { feature }\n});","import { REMOVE_NOTIFICATION, SET_NOTIFICATION } from \"../actions/notifications\";\n\nconst initState = [];\n\nexport const notificationsReducer = (notifications = initState, action) => {\n    switch (true) {\n\n        case action.type.includes(SET_NOTIFICATION):\n            return [...notifications, action.payload];\n\n        case action.type.includes(REMOVE_NOTIFICATION):\n            return notifications.filter(notification => notification.id !== action.payload);\n\n        default:\n            return notifications;\n    }\n};","const DATA_NORMALIZED = 'DATA_NORMALIZED';\n\nexport const dataNormalized = ({ feature }) => ({\n    type: `${feature} ${DATA_NORMALIZED}`,\n    meta: { feature }\n});","export default function getStringDateLuftdaten(date) {\n    let tmpDate = new Date(date);\n    let year = tmpDate.getFullYear();\n    let month = (tmpDate.getMonth() + 1);\n    let day = tmpDate.getUTCDate();\n    let hours = tmpDate.getHours();\n    let minutes = tmpDate.getMinutes();\n    let seconds = tmpDate.getSeconds();\n    let stringDate = \"\";\n\n    if (seconds < 10)\n        seconds = \"0\" + seconds;\n    \n    if (minutes < 10)\n        minutes = \"0\" + minutes;\n\n    if (hours < 10)\n        hours = \"0\" + hours;\n\n    if (month < 10)\n        month = \"0\" + month;\n\n    if (day < 10)\n        day = \"0\" + day;\n\n    stringDate = year + \"-\" + month + \"-\" + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\n\n    return stringDate;\n}","export default function getUnixDateFormLuftdaten(date) {\n    // IOS BUG https://stackoverflow.com/questions/26657353/date-on-ios-device-returns-nan/26671796\n    var t = date.split(/[- :]/);\n    var d = new Date(t[0], t[1]-1, t[2], t[3], t[4], t[5]);\n    var newDate = new Date(d);\n    newDate = newDate.getTime() / 1000.0;\n\n    return newDate;\n}","import getStringDate from './getStringDate';\nimport getUnixDateFromLuftdaten from './getUnixDateFromLuftdaten';\n\nexport default function getStringDateLuftdaten(date) {\n    var newDate = getUnixDateFromLuftdaten(date);\n    \n    // add 1 hour because of timezone\n    newDate += 3600;\n\n    return getStringDate(newDate * 1000);\n}","import { scaleLinear } from \"d3-scale\";\n\nconst valueDomain = [20, 40, 60, 100, 500];\nlet colorRange = ['rgba(0, 121, 107, 0.75)', 'rgba(249, 168, 37, 0.75)', 'rgba(230, 81, 0, 0.75)', 'rgba(221, 44, 0, 0.75)', 'rgba(150, 0, 132, 0.75)'];\n\nexport default function getMood(value, opacity) {\n    colorRange = [`rgba(0, 121, 107, ${opacity})`, `rgba(249, 168, 37, ${opacity})`, `rgba(230, 81, 0, ${opacity})`, `rgba(221, 44, 0, ${opacity})`, `rgba(150, 0, 132, ${opacity})`];\n\n    let mood = scaleLinear()\n        .domain(valueDomain)\n        .range(colorRange)\n        .clamp(true);\n\n    return mood(parseInt(value, 10));\n\n}","import getMood from '../../utilities/GetMood';\n\nexport default class StationModel {\n    constructor(provider = \"\",\n        id = 0,\n        name = \"Messstation\",\n        date = \"\",\n        longitude = 0,\n        latitude = 0,\n        components = {},\n        mood = 0,\n        moodRGBA = \"rgba(70, 70, 70, 0.75)\",\n        marker = {},\n        favorized = false) {\n            this.provider   = provider;\n            this.id         = id;\n            this.name       = name;\n            this.date       = date;\n            this.longitude  = longitude;\n            this.latitude   = latitude;\n            this.components = components;\n            this.mood       = mood;\n            this.moodRGBA   = getMood(mood, 0.75);\n            this.marker     = marker;\n            this.favorized  = favorized\n    }\n\n    set setProvider(provider) {\n        this.provider = provider;\n    }\n\n    set setID(id) {\n        this.id = id;\n    }\n\n    set setName(name) {\n        this.name = name;\n    }\n\n    set setLongitude(longitude) {\n        this.longitude = longitude;\n    }\n\n    set setLatitude(latitude) {\n        this.latitude = latitude;\n    }\n\n    set setComponents(components) {\n        this.components = components;\n    }\n\n    set setMood(mood) {\n        this.mood = mood;\n    }\n\n    set setMoodRGBA(moodRGBA) {\n        this.moodRGBA = moodRGBA;\n    }\n\n    set setDate(date) {\n        this.date = date;\n    }\n\n    get getLongitude() {\n        return this.longitude;\n    }\n\n    get getLatitude() {\n        return this.latitude;\n    }\n\n    get getID() {\n        return this.id;\n    }\n\n    get getName() {\n        return this.name;\n    }\n\n    get getComponents() {\n        return this.components;\n    }\n\n    get getMood() {\n        return this.mood;\n    }\n\n    get getMoodRGBA() {\n        return this.moodRGBA;\n    }\n\n    get getDate() {\n        return this.date;\n    }\n}","export default class Component {\n    constructor(type = \"\", value = 0, unit = \"\", update=true) {\n        this.type = type;\n        this.value = Number(value.toFixed(2));\n        this.unit = unit;\n        this.update = update;\n    }\n\n    set setType(type) {\n        this.type = type;\n    }\n\n    get getType() {\n        return this.type;\n    }\n\n    set setValue(value) {\n        this.value = value;\n    }\n\n    get getValue() {\n        return this.value;\n    }\n\n    set setUnit(unit) {\n        this.unit = unit;\n    }\n\n    get getUnit() {\n        return this.unit;\n    }\n    \n    set setUpdate(update) {\n        this.update = update;\n    }\n\n    get getUpdate() {\n        return this.update;\n    }\n}","import find from 'lodash/find';\nimport ReverseGeocode from 'esri-leaflet-geocoder';\n\nimport { dataNormalized } from \"../actions/data\";\nimport { addStation, updateStation, ADD_STATIONS, UPDATE_STATIONS } from \"../actions/stations\";\nimport getStringDateLuftdaten from '../../utilities/getStringDateLuftdaten';\nimport getUnixDateFromLuftdaten from '../../utilities/getUnixDateFromLuftdaten';\n\nimport Station from \"../models/station\";\nimport Component from \"../models/component\";\n\nexport const normalizeLuftdatenMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n    const addStations = (stations, provider) => {\n        if (stations) {\n            stations.map(station => {\n                let components = normalizeComponents(station.sensordatavalues);\n                let name =  \"Lufdatensensor: \" + station.sensor.id;\n\n                if (getState().options.reversegeo && ReverseGeocode !== undefined) {\n                    ReverseGeocode.geocodeService().reverse()\n                        .latlng([station.location.latitude, station.location.longitude])\n                        .distance(10)\n                        .run(function (error, result) {\n                            if (error) {\n                                name = \"Luftdatensensor: \" + station.id;\n                            }\n                            if (result) {\n                                name = result.address.ShortLabel;\n\n                                let stationModel = new Station(provider,\n                                    station.sensor.id.toString(),\n                                    name,\n                                    getStringDateLuftdaten(station.timestamp),\n                                    parseFloat(station.location.latitude),\n                                    parseFloat(station.location.longitude),\n                                    components,\n                                    components.PM10 ? parseFloat(components.PM10.value) : 0);                \n                                    \n                                dispatch(updateStation({ station: stationModel, provider: provider }))\n                            }\n                        });\n                }\n\n                let stationModel = new Station(provider,\n                    station.sensor.id.toString(),\n                    name,\n                    getStringDateLuftdaten(station.timestamp),\n                    parseFloat(station.location.latitude),\n                    parseFloat(station.location.longitude),\n                    components,\n                    components.PM10 ? components.PM10.value : 0)\n\n                let persistedStations = getState().stations;\n\n                if (persistedStations.length) {\n                    if (find(persistedStations, ['id', stationModel.id]) !== undefined || stationModel.mood > 1900) {\n                        return false\n                    }\n                    else {\n                        dispatch(addStation({ station: stationModel, provider: provider }))\n                    }\n                }\n                else if (stationModel.mood < 1900) {\n                    return dispatch(addStation({ station: stationModel, provider: provider }))\n                }\n\n                // return dispatch(addStation({ station: stationModel, provider: provider }))\n                return false\n                // return dispatch(addStation({ station: stationModel, provider: provider }))\n            })\n\n            // notify about the transformation\n            dispatch(dataNormalized({ feature: action.meta.feature }));\n        }\n    }\n\n    const updateStations = (stations, provider) => {\n        if (stations) {\n            stations.map(station => {\n                let components = normalizeComponents(station.sensordatavalues);\n                let name = null;\n\n                let stationModel = new Station(provider,\n                    station.sensor.id.toString(),\n                    name,\n                    getStringDateLuftdaten(station.timestamp),\n                    parseFloat(station.location.latitude),\n                    parseFloat(station.location.longitude),\n                    components,\n                    components.PM10 ? components.PM10.value : 0)\n\n                let filteredStation = getState().stations.filter(station => station.id === stationModel.id)\n\n                if (filteredStation.length) {\n                    if (getUnixDateFromLuftdaten(filteredStation[0].date) < getUnixDateFromLuftdaten(stationModel.date)) {\n                        return dispatch(updateStation({ station: stationModel, provider: provider }))\n                    }\n                    else\n                        return false\n                }\n\n                else {\n                    return false\n                }\n            })\n\n            // notify about the transformation\n            dispatch(dataNormalized({ feature: action.meta.feature }));\n        }\n    }\n\n    const normalizeComponents = (element) => {\n        let components = {};\n\n        element.forEach(component => {\n            let type = component.value_type === \"P1\" ? \"PM10\" : \"PM25\";\n            \n            components[type] = new Component(type, parseFloat(component.value), \"µg/m³\");\n        });\n\n        return components;\n    }\n\n    // filter both by action type and metadata content\n    if (action.type.includes(ADD_STATIONS) && action.meta.provider === \"luftdaten\") {\n        addStations(action.payload, action.meta.provider);\n    }\n\n    else if (action.type.includes(UPDATE_STATIONS) && action.meta.provider === \"luftdaten\") {\n        updateStations(action.payload, action.meta.provider);\n    } else {\n        next(action);\n    }\n};","import groupBy from 'lodash/groupBy';\nimport find from 'lodash/find';\n\nimport { dataNormalized } from \"../actions/data\";\nimport { addStation, updateStation, ADD_STATIONS, UPDATE_STATIONS } from \"../actions/stations\";\n\nimport * as stationsObject from './stations.json';\nimport getStringDate from '../../utilities/getStringDate';\n\nimport Station from \"../models/station\";\nimport Component from \"../models/component\";\n\nexport const normalizeUpperAustriaMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n\n    const addStations = (stations, provider) => {\n        let filteredStations = null;\n\n        if (stations) {\n            filteredStations = stations.filter(el => {\n                return el.station.match(\"S\") && el.mittelwert === \"HMW\";\n            });\n\n            filteredStations = groupBy(filteredStations, 'station');\n\n            Object.values(filteredStations).forEach(element => {\n                stationsObject.stationen.forEach(station => {\n                    if (station.code === element[0].station) {\n                        let components = normalizeComponents(element);\n                        \n                        let stationModel = new Station(\"upperaustria\",\n                            element[0].station,\n                            station.kurzname,\n                            getStringDate(element[0].zeitpunkt),\n                            station.geoBreite,\n                            station.geoLaenge,\n                            components,\n                            components.PM10 ? components.PM10.value : 0);\n\n                        let persistedStations = getState().stations;\n\n                        if (persistedStations.length) {\n                            if (find(persistedStations, ['id', stationModel.id]) !== undefined) {\n                                return false\n                            }\n                            else {\n                                dispatch(addStation({ station: stationModel, provider: provider }))\n                            }\n                        }\n                        else {\n                            return dispatch(addStation({ station: stationModel, provider: provider }))\n                        }\n\n                        // return dispatch(addStation({ station: stationModel, provider: provider }))\n                        return false\n                    }\n                })\n            });\n\n            // notify about the transformation\n            dispatch(dataNormalized({ feature: action.meta.feature }));\n        }\n    }\n\n    const updateStations = (stations, provider) => {\n        let filteredStations = null;\n\n        if (stations) {\n            filteredStations = stations.filter(el => {\n                return el.station.match(\"S\") && el.mittelwert === \"HMW\";\n            });\n\n            filteredStations = groupBy(filteredStations, 'station');\n\n            Object.values(filteredStations).forEach(element => {\n                stationsObject.stationen.forEach(station => {\n                    if (station.code === element[0].station) {\n                        let components = normalizeComponents(element);\n\n                        let stationModel = new Station(\"upperaustria\",\n                            element[0].station,\n                            station.kurzname,\n                            getStringDate(element[0].zeitpunkt),\n                            station.geoBreite,\n                            station.geoLaenge,\n                            components,\n                            components.PM10 ? components.PM10.value : 0);\n                        \n                        let filteredStation = getState().stations.filter(station => station.id === stationModel.id)\n\n                        if (filteredStation.length) {\n                            //if (getUnixDateFromLuftdaten(filteredStation[0].date) < getUnixDateFromLuftdaten(stationModel.date)) {\n                            return dispatch(updateStation({ station: stationModel, provider: provider }))\n                            //}\n                            //else\n                            //return false\n                        }\n\n                        else {\n                            return false\n                        }\n                    }\n                })\n            });\n\n            // notify about the transformation\n            dispatch(dataNormalized({ feature: action.meta.feature }));\n        }\n    }\n\n    const normalizeComponents = (element) => {\n        let components = {};\n        let PM10 = false;\n        let PM25 = false;\n        let NO2 = false;\n\n        element.forEach(component => {\n            let type = component.komponente;\n            let value = 0;\n            let unit = component.einheit;\n            let update = true;\n\n            switch (component.komponente) {\n                case \"PM10kont\":\n                    type = \"PM10\";\n                    PM10 = true;\n                    break;\n\n                case \"PM25kont\":\n                    type = \"PM25\";\n                    PM25 = true;\n                    break;\n\n                case \"NO2\":\n                    NO2 = true;\n                    break;\n\n                default:\n                    type = component.komponente\n            }\n\n            switch (component.einheit) {\n                case \"mg/m3\":\n                    unit = \"µg/m³\";\n                    value = parseFloat(component.messwert.replace(\",\", \".\")) * 1000;\n                    break;\n\n                case \"m/s\":\n                    unit = \"km/h\";\n                    value = parseFloat(component.messwert.replace(\",\", \".\")) * 3.6;\n                    break;\n\n                default:\n                    unit = component.einheit;\n                    value = parseFloat(component.messwert.replace(\",\", \".\"));\n            }\n\n            components[type] = new Component(type, value, unit, update);\n        })\n\n        // if there is no update available, set the components to 0\n        if (!PM10) {\n            components[\"PM10\"] = new Component(\"PM10\", 0, \"µg/m³\", false);\n        }\n\n        if (!PM25) {\n            components[\"PM25\"] = new Component(\"PM25\", 0, \"µg/m³\", false);\n        }\n\n        if (!NO2) {\n            components[\"NO2\"] = new Component(\"NO2\", 0, \"µg/m³\", false);\n        }\n\n        return components;\n    }\n\n    // filter both by action type and metadata content\n    if (action.type.includes(ADD_STATIONS) && action.meta.provider === \"upperaustria\") {\n        addStations(action.payload.messwerte, action.meta.provider);\n    }\n    else if (action.type.includes(UPDATE_STATIONS) && action.meta.provider === \"upperaustria\") {\n        updateStations(action.payload.messwerte, action.meta.provider);\n    }\n    else {\n        next(action);\n    }\n};","import { SET_NOTIFICATION, setNotification } from \"../actions/notifications\";\n\nexport const notificationMiddleware = () => (next) => (action) => {\n\n    if (action.type.includes(SET_NOTIFICATION)) {\n        const { payload, meta } = action;\n        const id = new Date().getMilliseconds();\n\n        // enrich the original payload with an id\n        const notification = {\n            id,\n            message: payload\n        };\n\n        // fire a new action with the enriched payload\n        // note: the payload is an object\n        next(setNotification({ message: notification, feature: meta.feature }));\n\n    } else {\n        next(action)\n    }\n};","export const actionSplitterMiddleware = () => (next) => (action) => {\n    if (Array.isArray(action)) {\n        action.forEach(_action => next(_action))\n    } else {\n        next(action);\n    }\n};","// import { DevTools } from '../ui/DevTool'\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport throttle from 'lodash/throttle';\n\nimport { stationsReducer } from './reducers/stationsReducer';\nimport { loadState, saveState } from './localStorage';\nimport { stationsMiddleware } from './middleware/stations';\nimport { apiMiddleware } from './middleware/api';\nimport { uiReducer } from \"./reducers/uiReducer\";\nimport { updateReducer } from \"./reducers/updateReducer\";\nimport { optionsReducer } from \"./reducers/optionsReducer\";\nimport { notificationsReducer } from \"./reducers/notificationsReducer\";\nimport { normalizeLuftdatenMiddleware } from \"./middleware/normalizeLuftdaten\";\nimport { normalizeUpperAustriaMiddleware } from \"./middleware/normalizeUpperAustria\";\nimport { notificationMiddleware } from \"./middleware/notifications\";\n// import { loggerMiddleware } from \"./middleware/logger\";\nimport { actionSplitterMiddleware } from \"./middleware/actionSplitter\";\n\nconst configureStore = () => {\n    // shape the state structure\n    const rootReducer = combineReducers({\n        stations: stationsReducer,\n        ui: uiReducer,\n        notifications: notificationsReducer,\n        update: updateReducer,\n        options: optionsReducer\n    });\n\n    // create the feature middleware array\n    const featureMiddleware = [\n        stationsMiddleware\n    ];\n\n    // create the core middleware array\n    const coreMiddleware = [\n        actionSplitterMiddleware,\n        apiMiddleware,\n        normalizeLuftdatenMiddleware,\n        normalizeUpperAustriaMiddleware,\n        notificationMiddleware\n    ];\n\n    const options = {\n        maxAge: 150\n    }\n\n    // compose the middleware with additional (optional) enhancers,\n    // DevTools.instrument() will enable dev tools integration\n    const enhancer = compose(\n        applyMiddleware(...featureMiddleware, ...coreMiddleware)\n    );\n\n    const composeEnhancers = composeWithDevTools(options);\n\n    const persistedState = loadState();\n\n    const store = createStore(\n        rootReducer,\n        persistedState,\n        composeEnhancers(\n        enhancer\n        // other store enhancers if any\n    ));\n\n    store.subscribe(throttle(() => {\n        saveState({\n            stations: store.getState().stations,\n            favorizedStations: store.getState().favorizedStations\n        });\n    }, 1000))\n\n    return store;\n}\n\nexport default configureStore;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import 'normalize.css/normalize.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from \"./container/App/App\";\nimport configureStore from \"./redux/store\";\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}